{"version":3,"sources":["null","ng://npn-slider/lib/utilities.ts","ng://npn-slider/lib/npn-slider.component.ts","ng://npn-slider/lib/npn-slider.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","Utilities","prototype","isNumberArray","arr","length","filter","value","isNaN","isNullOrEmpty","obj","undefined","toBoolean","allowedValues","_i","arguments","indexOf","findNextValidStepValue","n","step","divisorsSet1","divisorsSet2","sqrtNum","Math","sqrt","newStep","i","push","NpnSliderComponent","el","_this","_super","call","this","SliderHandlerEnum","EventEmitter","__","constructor","create","tslib_1.__extends","defineProperty","minValue","Number","maxValue","minSelected","maxSelected","hideTooltip","hideValues","isDisabled","ngOnInit","initializeSlider","ngOnChanges","changes","sliderInitiated","previousValue","currentValue","resetModel","sliderWidth","nativeElement","children","offsetWidth","e","console","error","validateSliderValues","sliderModel","currentValues","initValues","totalDiff","reduce","prevValue","curValue","warn","initializeStepIndicator","setHandlerPosition","updateInitValues","updateCurrentValue","showStepIndicator","stepIndicatorPositions","numOfStepIndicators","increment","leftPosition","toFixed","arrayValue","privateChange","onChange","emit","runningTotal","len","handlerX","setModelValue","index","round","setHandlerActiveOff","isMouseEventStart","isTouchEventStart","isHandlerActive","setHandlerActive","event","handlerIndex","preventDefault","clientX","deltaX","startClientX","currentHandlerIndex","startPleft","startPRight","handlerSliding","movedX","nextPLeft","nextPRight","Component","args","selector","template","styles","ElementRef","Input","Output","HostListener","type","NpnSliderModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\r\n\r\n/*Utilities */\r\nexport class Utilities {\r\n\r\n  public isNumberArray(arr: number[]): boolean {\r\n    return (arr && arr.length && arr.filter((value) => !isNaN(value)).length === arr.length) ? true : false;\r\n  }\r\n  public isNullOrEmpty(obj: any): boolean {\r\n    return obj === undefined || obj === null || obj === '';\r\n  }\r\n  public toBoolean(obj: any, ...allowedValues): boolean {\r\n    return (obj === '' || obj === 'true' || allowedValues.indexOf(obj) !== -1) ? true : false;\r\n  }\r\n  public findNextValidStepValue(n: number, step: number): number {\r\n    const divisorsSet1: number[] = [];\r\n    const divisorsSet2: number[] = [];\r\n    const sqrtNum = Math.sqrt(n);\r\n    let newStep = -1;\r\n    for (let i = 0; i < sqrtNum; i++) {\r\n      if (n % i === 0) {\r\n        if ((n / i) === i) {\r\n          divisorsSet1.push(i);\r\n        } else {\r\n          divisorsSet1.push(i);\r\n          divisorsSet2.push(n / i);\r\n        }\r\n      }\r\n    }\r\n    // Picking newStep by checking large set of divisors first\r\n    for (let i = 0; i < divisorsSet2.length; i++) {\r\n      if (step > divisorsSet2[i]) {\r\n        newStep = divisorsSet2[i];\r\n        break;\r\n      }\r\n    }\r\n    if (newStep === -1) { // checking set of small divisors if newStep didn't find out till.\r\n      for (let i = divisorsSet1.length - 1; i >= 0; i--) {\r\n        if (step > divisorsSet1[i]) {\r\n          newStep = divisorsSet1[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return (newStep === -1) ? 1 : newStep;\r\n  }\r\n}\r\n","import {\r\n  Component, Input, Output, EventEmitter,\r\n  ElementRef, OnInit, HostListener, SimpleChanges, OnChanges\r\n} from '@angular/core';\r\nimport { Utilities } from './utilities';\r\nimport { SliderHandlerEnum } from './slider-handler.enum';\r\n\r\n@Component({\r\n  selector: 'npn-slider',\r\n  template: `<!--npn-slider template-->\r\n<div class=\"slider\" [class.disabled]=\"isDisabled\">\r\n  <div class=\"bar\" (mousemove)=\"handlerSliding($event)\" (panmove)=\"handlerSliding($event)\">\r\n    <span class=\"left-handle\" [ngClass]=\"{'active': isHandlerActive && currentHandlerIndex === handlerIndex.left,\r\n                      'last-active': currentHandlerIndex === handlerIndex.left\r\n                    }\"\r\n      [style.left.%]=\"handlerX[handlerIndex.left]\" (mousedown)=\"setHandlerActive($event, handlerIndex.left)\" (panstart)=\"setHandlerActive($event, handlerIndex.left)\">\r\n      <span *ngIf=\"!hideTooltip\" class=\"handle-tooltip\">{{currentValues[handlerIndex.left]}}</span>\r\n    </span>\r\n    <div class=\"filler\">\r\n      <div class=\"step-indicators\">\r\n        <span *ngFor=\"let stepPos of stepIndicatorPositions\" [style.left.px]=\"stepPos\"></span>\r\n      </div>\r\n      <span *ngIf=\"multiRange\" [style.left.%]=\"handlerX[0]\" [style.width.%]=\"handlerX[handlerIndex.right] - handlerX[handlerIndex.left]\"></span>\r\n      <span *ngIf=\"!multiRange\" [style.left.%]=\"0\" [style.width.%]=\"handlerX[0]\"></span>\r\n    </div>\r\n    <span *ngIf=\"multiRange\" class=\"right-handle\" [ngClass]=\"{'active': isHandlerActive && currentHandlerIndex === handlerIndex.right,\r\n                      'last-active': currentHandlerIndex === handlerIndex.right\r\n                    }\"\r\n      [style.left.%]=\"handlerX[handlerIndex.right]\" (mousedown)=\"setHandlerActive($event, handlerIndex.right)\"\r\n      (panstart)=\"setHandlerActive($event, handlerIndex.right)\">\r\n      <span *ngIf=\"!hideTooltip\" class=\"handle-tooltip\">{{currentValues[handlerIndex.right]}}</span>\r\n    </span>\r\n  </div>\r\n  <div class=\"values\" *ngIf=\"!hideValues\">\r\n    <span>{{initValues[handlerIndex.left]}}</span>\r\n    <span>{{initValues[handlerIndex.right]}}</span>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.slider,.slider *{box-sizing:border-box}.slider{display:block;width:100%;height:30px;padding:4px 10px;cursor:default;font-size:12px}.slider .bar{width:100%;background:#e8e8e8;height:10px;position:relative;border-radius:5px;box-shadow:inset 1px 1px 5px #bababa}.slider .bar>span.left-handle,.slider .bar>span.right-handle{display:inline-block;width:22px;height:22px;background:#bedcb2;border:7px solid #71b357;border-radius:50%;position:absolute;top:-7px;margin-left:-10px;z-index:1;cursor:pointer;transition:left .2s ease}.slider .bar>span.left-handle.last-active,.slider .bar>span.right-handle.last-active{z-index:2}.slider .bar>span.left-handle .handle-tooltip,.slider .bar>span.right-handle .handle-tooltip{display:block;position:absolute;top:-34px;left:-14px;border:1px solid #8fc37a;border-radius:4px;padding:1px 4px;min-width:20px;text-align:center;background:#d9ebd2;color:#71b357;font-weight:700;transition:opacity .2s ease;opacity:0}.slider .bar>span.left-handle .handle-tooltip:before,.slider .bar>span.right-handle .handle-tooltip:before{content:\"\";border:5px solid transparent;border-top-color:#8fc37a;position:absolute;top:104%;left:33%}.slider .bar>span.left-handle .handle-tooltip:after,.slider .bar>span.right-handle .handle-tooltip:after{content:\"\";border:5px solid transparent;border-top-color:#d9ebd2;position:absolute;top:100%;left:33%}.slider .bar>span.left-handle.active>.handle-tooltip,.slider .bar>span.left-handle:hover>.handle-tooltip,.slider .bar>span.right-handle.active>.handle-tooltip,.slider .bar>span.right-handle:hover>.handle-tooltip{opacity:1}.slider .bar div.filler{display:block;width:100%;height:100%;position:relative;overflow:hidden;border-radius:5px;border:1px solid #bedcb2}.slider .bar div.filler>span{display:inline-block;height:100%;position:absolute;top:0;background:#bedcb2;transition:all .2s ease}.slider .bar div.filler>div.step-indicators{width:100%;height:100%;position:relative}.slider .bar div.filler>div.step-indicators>span{width:1px;display:inline-block;height:10px;background:#71b357;position:absolute;left:0}.slider .values{display:block;font-weight:700;margin-top:4px;width:102%;margin-left:-1%;color:#908f90}.slider .values span:first-child{float:left}.slider .values span:last-child{float:right}.slider.disabled{opacity:.4}.slider.disabled .bar{box-shadow:none!important}.slider.disabled .bar>span.left-handle,.slider.disabled .bar>span.right-handle{cursor:not-allowed}.slider.disabled .bar>span.left-handle .handle-tooltip,.slider.disabled .bar>span.right-handle .handle-tooltip{display:none}`]\r\n})\r\nexport class NpnSliderComponent extends Utilities implements OnInit, OnChanges {\r\n  private sliderModel = [0, 0, 0];\r\n  private step = 1;\r\n  private sliderWidth = 0;\r\n  private totalDiff = 0;\r\n  private startClientX = 0;\r\n  private startPleft = 0;\r\n  private startPRight = 0;\r\n  private minValue: number;\r\n  private maxValue: number;\r\n  private minSelected: number;\r\n  private maxSelected: number;\r\n  private sliderInitiated = false;\r\n\r\n  public initValues: number[] = [];\r\n  public currentValues: number[] = [0, 0];\r\n  public handlerX: number[] = [0, 0];\r\n  public isHandlerActive = false;\r\n  public isTouchEventStart = false;\r\n  public isMouseEventStart = false;\r\n  public currentHandlerIndex = 0;\r\n  public stepIndicatorPositions = [];\r\n  public isDisabled = false;\r\n  public hideTooltip = false;\r\n  public hideValues = false;\r\n\r\n  public handlerIndex = SliderHandlerEnum;\r\n\r\n  constructor(private el: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  @Input('min')\r\n  set setMinValues(value: number) {\r\n    if (!isNaN(value)) {\r\n      this.minValue = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input('max')\r\n  set setMaxValues(value: number) {\r\n    if (!isNaN(value)) {\r\n      this.maxValue = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input('minSelected')\r\n  set setMinSelectedValues(value: number) {\r\n    if (!isNaN(value) && this.minSelected !== Number(value)) {\r\n      this.minSelected = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input('maxSelected')\r\n  set setMaxSelectedValues(value: number) {\r\n    if (!isNaN(value) && this.maxSelected !== Number(value)) {\r\n      this.maxSelected = Number(value);\r\n    }\r\n  }\r\n  @Input('step')\r\n  set stepValue(value: number) {\r\n    if (!isNaN(value)) {\r\n      this.step = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input() showStepIndicator = false;\r\n  @Input() multiRange = true;\r\n  @Input('hide-tooltip')\r\n  set setHideTooltip(value: boolean) {\r\n    this.hideTooltip = this.toBoolean(value);\r\n  }\r\n  @Input('hide-values')\r\n  set setHideValues(value: boolean) {\r\n    this.hideValues = this.toBoolean(value);\r\n  }\r\n\r\n  @Input('disabled')\r\n  set setDisabled(value: string) {\r\n    this.isDisabled = this.toBoolean(value, 'disabled');\r\n  }\r\n\r\n  @Output() onChange = new EventEmitter<number[]>();\r\n\r\n  ngOnInit() {\r\n    this.initializeSlider();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.sliderInitiated) {\r\n      if (!this.isNullOrEmpty(changes.setMinSelectedValues)\r\n        && changes.setMinSelectedValues.previousValue === changes.setMinSelectedValues.currentValue) {\r\n        return;\r\n      }\r\n      if (!this.isNullOrEmpty(changes.setMaxSelectedValues)\r\n        && changes.setMaxSelectedValues.previousValue === changes.setMaxSelectedValues.currentValue) {\r\n        return;\r\n      }\r\n      this.resetModel();\r\n    }\r\n  }\r\n\r\n  /*Method to initailize entire Slider*/\r\n  public initializeSlider() {\r\n    try {\r\n      // Taking width of slider bar element.\r\n      this.sliderWidth = this.el.nativeElement.children[0].children[0].offsetWidth;\r\n      this.resetModel();\r\n      this.sliderInitiated = true;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  /*Method to initialize variables and model values */\r\n  private resetModel() {\r\n    this.validateSliderValues();\r\n    // Setting the model values\r\n    this.sliderModel = [\r\n      this.currentValues[0] - this.initValues[0],\r\n      this.currentValues[1] - this.currentValues[0],\r\n      this.initValues[1] - this.currentValues[1]\r\n    ];\r\n\r\n    this.totalDiff = this.sliderModel.reduce((prevValue, curValue) => prevValue + curValue, 0);\r\n\r\n    // Validation for slider step\r\n    if (this.totalDiff % this.step !== 0) {\r\n      const newStep = this.findNextValidStepValue(this.totalDiff, this.step);\r\n      console.warn('Invalid step value \"' + this.step + '\" : and took \"' + newStep + '\" as default step');\r\n      this.step = newStep;\r\n    }\r\n    this.initializeStepIndicator();\r\n    this.setHandlerPosition();\r\n  }\r\n\r\n  /*Method to do validation of init and seleted range values*/\r\n  private validateSliderValues() {\r\n    if (this.isNullOrEmpty(this.minValue) || this.isNullOrEmpty(this.maxValue)) {\r\n      this.updateInitValues([0, 0]);\r\n      this.updateCurrentValue([0, 0], true);\r\n    } else if (this.minValue > this.maxValue) {\r\n      this.updateInitValues([0, 0]);\r\n      this.updateCurrentValue([0, 0], true);\r\n    } else {\r\n      this.initValues = [this.minValue, this.maxValue];\r\n      /*\r\n      * Validation for Selected range values\r\n      */\r\n      this.minSelected = this.isNullOrEmpty(this.minSelected) ? 0 : this.minSelected;\r\n      this.maxSelected = this.isNullOrEmpty(this.maxSelected) ? 0 : this.maxSelected;\r\n\r\n      if (this.minSelected < this.minValue || this.minSelected > this.maxValue) {\r\n        this.minSelected = this.minValue;\r\n      }\r\n      if (this.maxSelected < this.minValue || this.maxSelected > this.maxValue) {\r\n        this.maxSelected = this.maxValue;\r\n      }\r\n      if (this.minSelected > this.maxSelected) {\r\n        this.minSelected = this.minValue;\r\n        this.maxSelected = this.maxValue;\r\n      }\r\n      this.updateCurrentValue([this.minSelected, this.maxSelected], true);\r\n    }\r\n  }\r\n\r\n  /*Method to add step inidicator to slider */\r\n  private initializeStepIndicator() {\r\n    if (this.showStepIndicator) {\r\n      this.stepIndicatorPositions.length = 0;\r\n      const numOfStepIndicators = this.totalDiff / this.step;\r\n      if (this.sliderWidth / numOfStepIndicators >= 10) {\r\n        const increment = this.sliderWidth / numOfStepIndicators;\r\n        let leftPosition = increment;\r\n        while (this.stepIndicatorPositions.length < numOfStepIndicators - 1) {\r\n          this.stepIndicatorPositions.push(+leftPosition.toFixed(2));\r\n          leftPosition += increment;\r\n        }\r\n      } else {\r\n        console.warn(`As 'step' value is too small compared to min & max value difference and slider width,\r\n          Step Indicator can't be displayed!. Provide slight large value for 'step'`);\r\n      }\r\n    } else {\r\n      this.stepIndicatorPositions.length = 0;\r\n    }\r\n  }\r\n\r\n  /*Method to set current selected values */\r\n  private updateCurrentValue(arrayValue: number[], privateChange: boolean = false) {\r\n    this.minSelected = this.currentValues[0] = arrayValue[0];\r\n    this.maxSelected = this.currentValues[1] = arrayValue[1];\r\n    if (!privateChange) {\r\n      this.onChange.emit((this.multiRange) ? this.currentValues : [this.currentValues[0]]);\r\n    }\r\n  }\r\n\r\n  /*Method to set current selected values */\r\n  private updateInitValues(arrayValue: number[]) {\r\n    this.minValue = this.initValues[0] = arrayValue[0];\r\n    this.maxValue = this.initValues[1] = arrayValue[1];\r\n  }\r\n\r\n  /*Method to set handler position */\r\n  private setHandlerPosition() {\r\n    let runningTotal = 0;\r\n    // Updating selected values : current values\r\n    this.updateCurrentValue([\r\n      this.initValues[0] + this.sliderModel[0],\r\n      this.initValues[1] - this.sliderModel[2]\r\n    ]);\r\n    /*Setting handler position */\r\n    for (let i = 0, len = this.sliderModel.length - 1; i < len; i++) {\r\n      runningTotal += this.sliderModel[i];\r\n      this.handlerX[i] = (runningTotal / this.totalDiff) * 100;\r\n    }\r\n  }\r\n\r\n  /*Method to set model array values - will try to refine the values using step */\r\n  private setModelValue(index: number, value: number) {\r\n    if (this.step > 1) {\r\n      value = Math.round(value / this.step) * this.step;\r\n    }\r\n    this.sliderModel[index] = value;\r\n  }\r\n\r\n  /*Method to disable handler movement*/\r\n  /*Execute on events:\r\n  * on-mouseup\r\n  * on-panend\r\n  */\r\n  @HostListener('document:mouseup')\r\n  @HostListener('document:panend')\r\n  setHandlerActiveOff() {\r\n    this.isMouseEventStart = false;\r\n    this.isTouchEventStart = false;\r\n    this.isHandlerActive = false;\r\n  }\r\n\r\n  /*Method to detect start draging handler*/\r\n  /*Execute on events:\r\n  * on-mousedown\r\n  * on-panstart\r\n  */\r\n  public setHandlerActive(event: any, handlerIndex: number) {\r\n    event.preventDefault();\r\n    if (!this.isDisabled) {\r\n\r\n      if (!this.isNullOrEmpty(event.clientX)) {\r\n        this.startClientX = event.clientX;\r\n        this.isMouseEventStart = true;\r\n        this.isTouchEventStart = false;\r\n      } else if (!this.isNullOrEmpty(event.deltaX)) {\r\n        this.startClientX = event.deltaX;\r\n        this.isTouchEventStart = true;\r\n        this.isMouseEventStart = false;\r\n      }\r\n      if (this.isMouseEventStart || this.isTouchEventStart) {\r\n        this.currentHandlerIndex = handlerIndex;\r\n        this.startPleft = this.sliderModel[handlerIndex];\r\n        this.startPRight = this.sliderModel[handlerIndex + 1];\r\n        this.isHandlerActive = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*Method to calculate silder handler movement */\r\n  /*Execute on events:\r\n  * on-mousemove\r\n  * on-panmove\r\n  */\r\n  public handlerSliding(event: any) {\r\n    if ((this.isMouseEventStart && event.clientX) || (this.isTouchEventStart && event.deltaX)) {\r\n      const movedX = Math.round(((event.clientX || event.deltaX) - this.startClientX) / this.sliderWidth * this.totalDiff);\r\n      const nextPLeft = this.startPleft + movedX;\r\n      const nextPRight = this.startPRight - movedX;\r\n      if (nextPLeft >= 0 && nextPRight >= 0) {\r\n        this.setModelValue(this.currentHandlerIndex, nextPLeft);\r\n        this.setModelValue(this.currentHandlerIndex + 1, nextPRight);\r\n        this.setHandlerPosition();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NpnSliderComponent } from './npn-slider.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NpnSliderComponent],\r\n  exports: [NpnSliderComponent]\r\n})\r\nexport class NpnSliderModule { }\r\n"]}