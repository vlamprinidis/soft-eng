{"version":3,"file":"npn-slider.js.map","sources":["ng://npn-slider/lib/utilities.ts","ng://npn-slider/lib/npn-slider.component.ts","ng://npn-slider/lib/npn-slider.module.ts"],"sourcesContent":["\r\n\r\n/*Utilities */\r\nexport class Utilities {\r\n\r\n  public isNumberArray(arr: number[]): boolean {\r\n    return (arr && arr.length && arr.filter((value) => !isNaN(value)).length === arr.length) ? true : false;\r\n  }\r\n  public isNullOrEmpty(obj: any): boolean {\r\n    return obj === undefined || obj === null || obj === '';\r\n  }\r\n  public toBoolean(obj: any, ...allowedValues): boolean {\r\n    return (obj === '' || obj === 'true' || allowedValues.indexOf(obj) !== -1) ? true : false;\r\n  }\r\n  public findNextValidStepValue(n: number, step: number): number {\r\n    const divisorsSet1: number[] = [];\r\n    const divisorsSet2: number[] = [];\r\n    const sqrtNum = Math.sqrt(n);\r\n    let newStep = -1;\r\n    for (let i = 0; i < sqrtNum; i++) {\r\n      if (n % i === 0) {\r\n        if ((n / i) === i) {\r\n          divisorsSet1.push(i);\r\n        } else {\r\n          divisorsSet1.push(i);\r\n          divisorsSet2.push(n / i);\r\n        }\r\n      }\r\n    }\r\n    // Picking newStep by checking large set of divisors first\r\n    for (let i = 0; i < divisorsSet2.length; i++) {\r\n      if (step > divisorsSet2[i]) {\r\n        newStep = divisorsSet2[i];\r\n        break;\r\n      }\r\n    }\r\n    if (newStep === -1) { // checking set of small divisors if newStep didn't find out till.\r\n      for (let i = divisorsSet1.length - 1; i >= 0; i--) {\r\n        if (step > divisorsSet1[i]) {\r\n          newStep = divisorsSet1[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return (newStep === -1) ? 1 : newStep;\r\n  }\r\n}\r\n","import {\r\n  Component, Input, Output, EventEmitter,\r\n  ElementRef, OnInit, HostListener, SimpleChanges, OnChanges\r\n} from '@angular/core';\r\nimport { Utilities } from './utilities';\r\nimport { SliderHandlerEnum } from './slider-handler.enum';\r\n\r\n@Component({\r\n  selector: 'npn-slider',\r\n  template: `<!--npn-slider template-->\r\n<div class=\"slider\" [class.disabled]=\"isDisabled\">\r\n  <div class=\"bar\" (mousemove)=\"handlerSliding($event)\" (panmove)=\"handlerSliding($event)\">\r\n    <span class=\"left-handle\" [ngClass]=\"{'active': isHandlerActive && currentHandlerIndex === handlerIndex.left,\r\n                      'last-active': currentHandlerIndex === handlerIndex.left\r\n                    }\"\r\n      [style.left.%]=\"handlerX[handlerIndex.left]\" (mousedown)=\"setHandlerActive($event, handlerIndex.left)\" (panstart)=\"setHandlerActive($event, handlerIndex.left)\">\r\n      <span *ngIf=\"!hideTooltip\" class=\"handle-tooltip\">{{currentValues[handlerIndex.left]}}</span>\r\n    </span>\r\n    <div class=\"filler\">\r\n      <div class=\"step-indicators\">\r\n        <span *ngFor=\"let stepPos of stepIndicatorPositions\" [style.left.px]=\"stepPos\"></span>\r\n      </div>\r\n      <span *ngIf=\"multiRange\" [style.left.%]=\"handlerX[0]\" [style.width.%]=\"handlerX[handlerIndex.right] - handlerX[handlerIndex.left]\"></span>\r\n      <span *ngIf=\"!multiRange\" [style.left.%]=\"0\" [style.width.%]=\"handlerX[0]\"></span>\r\n    </div>\r\n    <span *ngIf=\"multiRange\" class=\"right-handle\" [ngClass]=\"{'active': isHandlerActive && currentHandlerIndex === handlerIndex.right,\r\n                      'last-active': currentHandlerIndex === handlerIndex.right\r\n                    }\"\r\n      [style.left.%]=\"handlerX[handlerIndex.right]\" (mousedown)=\"setHandlerActive($event, handlerIndex.right)\"\r\n      (panstart)=\"setHandlerActive($event, handlerIndex.right)\">\r\n      <span *ngIf=\"!hideTooltip\" class=\"handle-tooltip\">{{currentValues[handlerIndex.right]}}</span>\r\n    </span>\r\n  </div>\r\n  <div class=\"values\" *ngIf=\"!hideValues\">\r\n    <span>{{initValues[handlerIndex.left]}}</span>\r\n    <span>{{initValues[handlerIndex.right]}}</span>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.slider,.slider *{box-sizing:border-box}.slider{display:block;width:100%;height:30px;padding:4px 10px;cursor:default;font-size:12px}.slider .bar{width:100%;background:#e8e8e8;height:10px;position:relative;border-radius:5px;box-shadow:inset 1px 1px 5px #bababa}.slider .bar>span.left-handle,.slider .bar>span.right-handle{display:inline-block;width:22px;height:22px;background:#bedcb2;border:7px solid #71b357;border-radius:50%;position:absolute;top:-7px;margin-left:-10px;z-index:1;cursor:pointer;transition:left .2s ease}.slider .bar>span.left-handle.last-active,.slider .bar>span.right-handle.last-active{z-index:2}.slider .bar>span.left-handle .handle-tooltip,.slider .bar>span.right-handle .handle-tooltip{display:block;position:absolute;top:-34px;left:-14px;border:1px solid #8fc37a;border-radius:4px;padding:1px 4px;min-width:20px;text-align:center;background:#d9ebd2;color:#71b357;font-weight:700;transition:opacity .2s ease;opacity:0}.slider .bar>span.left-handle .handle-tooltip:before,.slider .bar>span.right-handle .handle-tooltip:before{content:\"\";border:5px solid transparent;border-top-color:#8fc37a;position:absolute;top:104%;left:33%}.slider .bar>span.left-handle .handle-tooltip:after,.slider .bar>span.right-handle .handle-tooltip:after{content:\"\";border:5px solid transparent;border-top-color:#d9ebd2;position:absolute;top:100%;left:33%}.slider .bar>span.left-handle.active>.handle-tooltip,.slider .bar>span.left-handle:hover>.handle-tooltip,.slider .bar>span.right-handle.active>.handle-tooltip,.slider .bar>span.right-handle:hover>.handle-tooltip{opacity:1}.slider .bar div.filler{display:block;width:100%;height:100%;position:relative;overflow:hidden;border-radius:5px;border:1px solid #bedcb2}.slider .bar div.filler>span{display:inline-block;height:100%;position:absolute;top:0;background:#bedcb2;transition:all .2s ease}.slider .bar div.filler>div.step-indicators{width:100%;height:100%;position:relative}.slider .bar div.filler>div.step-indicators>span{width:1px;display:inline-block;height:10px;background:#71b357;position:absolute;left:0}.slider .values{display:block;font-weight:700;margin-top:4px;width:102%;margin-left:-1%;color:#908f90}.slider .values span:first-child{float:left}.slider .values span:last-child{float:right}.slider.disabled{opacity:.4}.slider.disabled .bar{box-shadow:none!important}.slider.disabled .bar>span.left-handle,.slider.disabled .bar>span.right-handle{cursor:not-allowed}.slider.disabled .bar>span.left-handle .handle-tooltip,.slider.disabled .bar>span.right-handle .handle-tooltip{display:none}`]\r\n})\r\nexport class NpnSliderComponent extends Utilities implements OnInit, OnChanges {\r\n  private sliderModel = [0, 0, 0];\r\n  private step = 1;\r\n  private sliderWidth = 0;\r\n  private totalDiff = 0;\r\n  private startClientX = 0;\r\n  private startPleft = 0;\r\n  private startPRight = 0;\r\n  private minValue: number;\r\n  private maxValue: number;\r\n  private minSelected: number;\r\n  private maxSelected: number;\r\n  private sliderInitiated = false;\r\n\r\n  public initValues: number[] = [];\r\n  public currentValues: number[] = [0, 0];\r\n  public handlerX: number[] = [0, 0];\r\n  public isHandlerActive = false;\r\n  public isTouchEventStart = false;\r\n  public isMouseEventStart = false;\r\n  public currentHandlerIndex = 0;\r\n  public stepIndicatorPositions = [];\r\n  public isDisabled = false;\r\n  public hideTooltip = false;\r\n  public hideValues = false;\r\n\r\n  public handlerIndex = SliderHandlerEnum;\r\n\r\n  constructor(private el: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  @Input('min')\r\n  set setMinValues(value: number) {\r\n    if (!isNaN(value)) {\r\n      this.minValue = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input('max')\r\n  set setMaxValues(value: number) {\r\n    if (!isNaN(value)) {\r\n      this.maxValue = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input('minSelected')\r\n  set setMinSelectedValues(value: number) {\r\n    if (!isNaN(value) && this.minSelected !== Number(value)) {\r\n      this.minSelected = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input('maxSelected')\r\n  set setMaxSelectedValues(value: number) {\r\n    if (!isNaN(value) && this.maxSelected !== Number(value)) {\r\n      this.maxSelected = Number(value);\r\n    }\r\n  }\r\n  @Input('step')\r\n  set stepValue(value: number) {\r\n    if (!isNaN(value)) {\r\n      this.step = Number(value);\r\n    }\r\n  }\r\n\r\n  @Input() showStepIndicator = false;\r\n  @Input() multiRange = true;\r\n  @Input('hide-tooltip')\r\n  set setHideTooltip(value: boolean) {\r\n    this.hideTooltip = this.toBoolean(value);\r\n  }\r\n  @Input('hide-values')\r\n  set setHideValues(value: boolean) {\r\n    this.hideValues = this.toBoolean(value);\r\n  }\r\n\r\n  @Input('disabled')\r\n  set setDisabled(value: string) {\r\n    this.isDisabled = this.toBoolean(value, 'disabled');\r\n  }\r\n\r\n  @Output() onChange = new EventEmitter<number[]>();\r\n\r\n  ngOnInit() {\r\n    this.initializeSlider();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.sliderInitiated) {\r\n      if (!this.isNullOrEmpty(changes.setMinSelectedValues)\r\n        && changes.setMinSelectedValues.previousValue === changes.setMinSelectedValues.currentValue) {\r\n        return;\r\n      }\r\n      if (!this.isNullOrEmpty(changes.setMaxSelectedValues)\r\n        && changes.setMaxSelectedValues.previousValue === changes.setMaxSelectedValues.currentValue) {\r\n        return;\r\n      }\r\n      this.resetModel();\r\n    }\r\n  }\r\n\r\n  /*Method to initailize entire Slider*/\r\n  public initializeSlider() {\r\n    try {\r\n      // Taking width of slider bar element.\r\n      this.sliderWidth = this.el.nativeElement.children[0].children[0].offsetWidth;\r\n      this.resetModel();\r\n      this.sliderInitiated = true;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  /*Method to initialize variables and model values */\r\n  private resetModel() {\r\n    this.validateSliderValues();\r\n    // Setting the model values\r\n    this.sliderModel = [\r\n      this.currentValues[0] - this.initValues[0],\r\n      this.currentValues[1] - this.currentValues[0],\r\n      this.initValues[1] - this.currentValues[1]\r\n    ];\r\n\r\n    this.totalDiff = this.sliderModel.reduce((prevValue, curValue) => prevValue + curValue, 0);\r\n\r\n    // Validation for slider step\r\n    if (this.totalDiff % this.step !== 0) {\r\n      const newStep = this.findNextValidStepValue(this.totalDiff, this.step);\r\n      console.warn('Invalid step value \"' + this.step + '\" : and took \"' + newStep + '\" as default step');\r\n      this.step = newStep;\r\n    }\r\n    this.initializeStepIndicator();\r\n    this.setHandlerPosition();\r\n  }\r\n\r\n  /*Method to do validation of init and seleted range values*/\r\n  private validateSliderValues() {\r\n    if (this.isNullOrEmpty(this.minValue) || this.isNullOrEmpty(this.maxValue)) {\r\n      this.updateInitValues([0, 0]);\r\n      this.updateCurrentValue([0, 0], true);\r\n    } else if (this.minValue > this.maxValue) {\r\n      this.updateInitValues([0, 0]);\r\n      this.updateCurrentValue([0, 0], true);\r\n    } else {\r\n      this.initValues = [this.minValue, this.maxValue];\r\n      /*\r\n      * Validation for Selected range values\r\n      */\r\n      this.minSelected = this.isNullOrEmpty(this.minSelected) ? 0 : this.minSelected;\r\n      this.maxSelected = this.isNullOrEmpty(this.maxSelected) ? 0 : this.maxSelected;\r\n\r\n      if (this.minSelected < this.minValue || this.minSelected > this.maxValue) {\r\n        this.minSelected = this.minValue;\r\n      }\r\n      if (this.maxSelected < this.minValue || this.maxSelected > this.maxValue) {\r\n        this.maxSelected = this.maxValue;\r\n      }\r\n      if (this.minSelected > this.maxSelected) {\r\n        this.minSelected = this.minValue;\r\n        this.maxSelected = this.maxValue;\r\n      }\r\n      this.updateCurrentValue([this.minSelected, this.maxSelected], true);\r\n    }\r\n  }\r\n\r\n  /*Method to add step inidicator to slider */\r\n  private initializeStepIndicator() {\r\n    if (this.showStepIndicator) {\r\n      this.stepIndicatorPositions.length = 0;\r\n      const numOfStepIndicators = this.totalDiff / this.step;\r\n      if (this.sliderWidth / numOfStepIndicators >= 10) {\r\n        const increment = this.sliderWidth / numOfStepIndicators;\r\n        let leftPosition = increment;\r\n        while (this.stepIndicatorPositions.length < numOfStepIndicators - 1) {\r\n          this.stepIndicatorPositions.push(+leftPosition.toFixed(2));\r\n          leftPosition += increment;\r\n        }\r\n      } else {\r\n        console.warn(`As 'step' value is too small compared to min & max value difference and slider width,\r\n          Step Indicator can't be displayed!. Provide slight large value for 'step'`);\r\n      }\r\n    } else {\r\n      this.stepIndicatorPositions.length = 0;\r\n    }\r\n  }\r\n\r\n  /*Method to set current selected values */\r\n  private updateCurrentValue(arrayValue: number[], privateChange: boolean = false) {\r\n    this.minSelected = this.currentValues[0] = arrayValue[0];\r\n    this.maxSelected = this.currentValues[1] = arrayValue[1];\r\n    if (!privateChange) {\r\n      this.onChange.emit((this.multiRange) ? this.currentValues : [this.currentValues[0]]);\r\n    }\r\n  }\r\n\r\n  /*Method to set current selected values */\r\n  private updateInitValues(arrayValue: number[]) {\r\n    this.minValue = this.initValues[0] = arrayValue[0];\r\n    this.maxValue = this.initValues[1] = arrayValue[1];\r\n  }\r\n\r\n  /*Method to set handler position */\r\n  private setHandlerPosition() {\r\n    let runningTotal = 0;\r\n    // Updating selected values : current values\r\n    this.updateCurrentValue([\r\n      this.initValues[0] + this.sliderModel[0],\r\n      this.initValues[1] - this.sliderModel[2]\r\n    ]);\r\n    /*Setting handler position */\r\n    for (let i = 0, len = this.sliderModel.length - 1; i < len; i++) {\r\n      runningTotal += this.sliderModel[i];\r\n      this.handlerX[i] = (runningTotal / this.totalDiff) * 100;\r\n    }\r\n  }\r\n\r\n  /*Method to set model array values - will try to refine the values using step */\r\n  private setModelValue(index: number, value: number) {\r\n    if (this.step > 1) {\r\n      value = Math.round(value / this.step) * this.step;\r\n    }\r\n    this.sliderModel[index] = value;\r\n  }\r\n\r\n  /*Method to disable handler movement*/\r\n  /*Execute on events:\r\n  * on-mouseup\r\n  * on-panend\r\n  */\r\n  @HostListener('document:mouseup')\r\n  @HostListener('document:panend')\r\n  setHandlerActiveOff() {\r\n    this.isMouseEventStart = false;\r\n    this.isTouchEventStart = false;\r\n    this.isHandlerActive = false;\r\n  }\r\n\r\n  /*Method to detect start draging handler*/\r\n  /*Execute on events:\r\n  * on-mousedown\r\n  * on-panstart\r\n  */\r\n  public setHandlerActive(event: any, handlerIndex: number) {\r\n    event.preventDefault();\r\n    if (!this.isDisabled) {\r\n\r\n      if (!this.isNullOrEmpty(event.clientX)) {\r\n        this.startClientX = event.clientX;\r\n        this.isMouseEventStart = true;\r\n        this.isTouchEventStart = false;\r\n      } else if (!this.isNullOrEmpty(event.deltaX)) {\r\n        this.startClientX = event.deltaX;\r\n        this.isTouchEventStart = true;\r\n        this.isMouseEventStart = false;\r\n      }\r\n      if (this.isMouseEventStart || this.isTouchEventStart) {\r\n        this.currentHandlerIndex = handlerIndex;\r\n        this.startPleft = this.sliderModel[handlerIndex];\r\n        this.startPRight = this.sliderModel[handlerIndex + 1];\r\n        this.isHandlerActive = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*Method to calculate silder handler movement */\r\n  /*Execute on events:\r\n  * on-mousemove\r\n  * on-panmove\r\n  */\r\n  public handlerSliding(event: any) {\r\n    if ((this.isMouseEventStart && event.clientX) || (this.isTouchEventStart && event.deltaX)) {\r\n      const movedX = Math.round(((event.clientX || event.deltaX) - this.startClientX) / this.sliderWidth * this.totalDiff);\r\n      const nextPLeft = this.startPleft + movedX;\r\n      const nextPRight = this.startPRight - movedX;\r\n      if (nextPLeft >= 0 && nextPRight >= 0) {\r\n        this.setModelValue(this.currentHandlerIndex, nextPLeft);\r\n        this.setModelValue(this.currentHandlerIndex + 1, nextPRight);\r\n        this.setHandlerPosition();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NpnSliderComponent } from './npn-slider.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NpnSliderComponent],\r\n  exports: [NpnSliderComponent]\r\n})\r\nexport class NpnSliderModule { }\r\n"],"names":[],"mappings":"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"}
