{
  "version": 3,
  "file": "ng5-slider.umd.min.js",
  "sources": [
    "ng://ng5-slider/node_modules/tslib/tslib.es6.js",
    "ng://ng5-slider/out/options.ts",
    "ng://ng5-slider/out/change-context.ts",
    "ng://ng5-slider/out/value-helper.ts",
    "ng://ng5-slider/out/jq-lite-wrapper.ts",
    "ng://ng5-slider/out/throttled-func.ts",
    "ng://ng5-slider/out/compatibility-helper.ts",
    "ng://ng5-slider/out/math-helper.ts",
    "ng://ng5-slider/out/slider.component.ts",
    "ng://ng5-slider/out/tooltip-wrapper.component.ts",
    "ng://ng5-slider/out/slider.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { PointerType } from './pointer-type';\n\n/** Label type */\nexport enum LabelType {\n  /** Label above low pointer */\n  Low,\n  /** Label above high pointer */\n  High,\n  /** Label for minimum slider value */\n  Floor,\n  /** Label for maximum slider value */\n  Ceil,\n  /** Label below legend tick */\n  TickValue\n}\n\n/** Function to translate label value into text */\nexport type TranslateFunction = (value: number, label: LabelType) => string;\n/** Function to combind */\nexport type CombineLabelsFunction = (minLabel: string, maxLabel: string) => string;\n/** Function to provide legend  */\nexport type GetLegendFunction = (value: number) => string;\n\n/** Function converting slider value to slider position */\nexport type ValueToPositionFunction = (val: number, minVal: number, maxVal: number) => number;\n\n/** Function converting slider position to slider value */\nexport type PositionToValueFunction = (percent: number, minVal: number, maxVal: number) => number;\n\n/**\n * Custom step definition\n *\n * This can be used to specify custom values and legend values for slider ticks\n */\nexport interface CustomStepDefinition {\n  /** Value */\n  value: number;\n  /** Legend (label for the value) */\n  legend?: string;\n}\n\n/** Slider options */\nexport class Options {\n  /** Minimum value for a slider. */\n  floor?: number = 0;\n\n  /** Maximum value for a slider (defaults to value model). */\n  ceil?: number = null;\n\n  /** Step between each value. */\n  step?: number = 1;\n\n  /** The minimum range authorized on the slider. Applies to range slider only. */\n  minRange?: number = null;\n\n  /** The maximum range authorized on the slider. Applies to range slider only. */\n  maxRange?: number = null;\n\n  /** Set to true to have a push behavior. When the min handle goes above the max,\n    the max is moved as well (and vice-versa). The range between min and max is\n    defined by the step option (defaults to 1) and can also be override by\n    the minRange option. Applies to range slider only. */\n  pushRange?: boolean = false;\n\n  /** The minimum value authorized on the slider. */\n  minLimit?: number = null;\n\n  /** The maximum value authorized on the slider. */\n  maxLimit?: number = null;\n\n  /** Custom translate function. Use this if you want to translate values displayed\n      on the slider. */\n  translate?: TranslateFunction = null;\n\n  /** Custom function for combining overlapping labels in range slider.\n      It takes the min and max values (already translated with translate fuction)\n      and should return how these two values should be combined.\n      If not provided, the default function will join the two values with\n      ' - ' as separator. */\n  combineLabels?: CombineLabelsFunction = null;\n\n  /** Use to display legend under ticks (thus, it needs to be used along with\n     showTicks or showTicksValues). The function will be called with each tick\n     value and returned content will be displayed under the tick as a legend.\n     If the returned value is null, then no legend is displayed under\n     the corresponding tick.You can also directly provide the legend values\n     in the stepsArray option. */\n  getLegend?: GetLegendFunction = null;\n\n  /** If you want to display a slider with non linear/number steps.\n     Just pass an array with each slider value and that's it; the floor, ceil and step settings\n     of the slider will be computed automatically.\n     By default, the value model and valueHigh model values will be the value of the selected item\n     in the stepsArray.\n     They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n     option to true. */\n  stepsArray?: CustomStepDefinition[] = null;\n\n  /** Set to true to bind the index of the selected item to value model and valueHigh model. */\n  bindIndexForStepsArray?: boolean = false;\n\n  /** When set to true and using a range slider, the range can be dragged by the selection bar.\n    Applies to range slider only. */\n  draggableRange?: boolean = false;\n\n  /** Same as draggableRange but the slider range can't be changed.\n    Applies to range slider only. */\n  draggableRangeOnly?: boolean = false;\n\n  /** Set to true to always show the selection bar before the slider handle. */\n  showSelectionBar?: boolean = false;\n\n  /** Set to true to always show the selection bar after the slider handle. */\n  showSelectionBarEnd?: boolean = false;\n\n  /**  Set a number to draw the selection bar between this value and the slider handle. */\n  showSelectionBarFromValue?: number = null;\n\n  /**  Only for range slider. Set to true to visualize in different colour the areas\n    on the left/right (top/bottom for vertical range slider) of selection bar between the handles. */\n  showOuterSelectionBars?: boolean = false;\n\n  /** Set to true to hide pointer labels */\n  hidePointerLabels?: boolean = false;\n\n  /** Set to true to hide min / max labels  */\n  hideLimitLabels?: boolean = false;\n\n  /** Set to false to disable the auto-hiding behavior of the limit labels. */\n  autoHideLimitLabels?: boolean = true;\n\n  /** Set to true to make the slider read-only. */\n  readOnly?: boolean = false;\n\n  /** Set to true to disable the slider. */\n  disabled?: boolean = false;\n\n  /** Number of milliseconds to wait between two updates of the slider.\n    Internally, a throttle function (See http://underscorejs.org/#throttle) is used when the model\n    or high values of the slider are changed from outside the slider. This is to prevent from\n    re-rendering the slider too many times in a row. interval is the timeout value used on the\n    throttle function. */\n  interval?: number = 350;\n\n  /** Set to true to display a tick for each step of the slider. */\n  showTicks?: boolean = false;\n\n  /** Set to true to display a tick and the step value for each step of the slider.. */\n  showTicksValues?: boolean = false;\n\n  /* The step between each tick to display. If not set, the step value is used.\n    Only applies when Not used when ticksArray is specified. */\n  tickStep?: number = null;\n\n  /* The step between displaying each tick step value. */\n  tickValueStep?: number = 1;\n\n  /** Use to display ticks at specific positions.\n    The array contains the index of the ticks that should be displayed.\n    For example, [0, 1, 5] will display a tick for the first, second and sixth values. */\n  ticksArray?: number[] = null;\n\n  /** Used to display a tooltip when a tick is hovered.\n    Set to a function that returns the tooltip content for a given value. */\n  ticksTooltip?: (value: number) => string = null;\n\n  /** Same as ticksTooltip but for ticks values. */\n  ticksValuesTooltip?: (value: number) => string = null;\n\n  /** Set to true to display the slider vertically.\n    The slider will take the full height of its parent.\n    Changing this value at runtime is not currently supported. */\n  vertical?: boolean = false;\n\n  /** Function that returns the current color of the selection bar.\n    If your color won't change, don't use this option but set it through CSS.\n    If the returned color depends on a model value (either value or valueHigh),\n    you should use the argument passed to the function.\n    Indeed, when the function is called, there is no certainty that the model\n    has already been updated.*/\n  getSelectionBarColor?: (minValue: number, maxValue?: number) => string = null;\n\n  /** Function that returns the color of a tick. showTicks must be enabled. */\n  getTickColor?: (value: number) => string = null;\n\n  /** Function that returns the current color of a pointer.\n    If your color won't change, don't use this option but set it through CSS.\n    If the returned color depends on a model value (either value or valueHigh),\n    you should use the argument passed to the function.\n    Indeed, when the function is called, there is no certainty that the model has already been updated.\n    To handle range slider pointers independently, you should evaluate pointerType within the given\n    function where \"min\" stands for value model and \"max\" for valueHigh model values. */\n  getPointerColor?: (value: number, pointerType: PointerType) => string = null;\n\n  /** Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n    Left/bottom arrows: -1\n    Right/top arrows: +1\n    Page-down: -10%\n    Page-up: +10%\n    Home: minimum value\n    End: maximum value\n   */\n  keyboardSupport?: boolean = true;\n\n  /** If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n    so that the slider is rendered properly and the events are handled correctly. */\n  scale?: number = 1;\n\n  /** Set to true to force the value to be rounded to the step, even when modified from the outside.\n    When set to false, if the model values are modified from outside the slider, they are not rounded\n    and can be between two steps. */\n  enforceStep?: boolean = true;\n\n  /** Set to true to round the value model and valueHigh model to the slider range even when modified\n    from outside the slider. When set to false, if the model values are modified from outside the slider,\n    they are not rounded but they are still rendered properly on the slider. */\n  enforceRange?: boolean = false;\n\n  /** Set to true to prevent to user from switching the min and max handles. Applies to range slider only. */\n  noSwitching?: boolean = false;\n\n  /** Set to true to only bind events on slider handles. */\n  onlyBindHandles?: boolean = false;\n\n  /** Set to true to show graphs right to left.\n    If vertical is true it will be from top to bottom and left / right arrow functions reversed. */\n  rightToLeft?: boolean = false;\n\n  /** Set to true to reverse keyboard navigation:\n    Right/top arrows: -1\n    Left/bottom arrows: +1\n    Page-up: -10%\n    Page-down: +10%\n    End: minimum value\n    Home: maximum value\n   */\n  reversedControls?: boolean = false;\n\n  /** Set to true to keep the slider labels inside the slider bounds. */\n  boundPointerLabels?: boolean = true;\n\n  /** Set to true to use a logarithmic scale to display the slider.  */\n  logScale?: boolean = false;\n\n  /** Function that returns the position on the slider for a given value.\n    The position must be a percentage between 0 and 1. */\n  customValueToPosition?: ValueToPositionFunction = null;\n\n  /** Function that returns the value for a given position on the slider.\n    The position is a percentage between 0 and 1. */\n  customPositionToValue?: PositionToValueFunction = null;\n\n  /** Precision limit for calculated values.\n    Values used in calculations will be rounded to this number of significant digits\n    to prevent accumulating small floating-point errors. */\n  precisionLimit?: number = 12;\n\n  /** Use to display the selection bar as a gradient.\n    The given object must contain from and to properties which are colors. */\n  selectionBarGradient?: {from: string, to: string} = null;\n\n  /** Use to add a label directly to the slider for accessibility. Adds the aria-label attribute. */\n  ariaLabel?: string = null;\n\n  /** Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n    Adds the aria-labelledby attribute. */\n  ariaLabelledBy?: string = null;\n\n  /** Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute. */\n  ariaLabelHigh?: string = null;\n\n  /** Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n    Adds the aria-labelledby attribute. */\n  ariaLabelledByHigh?: string = null;\n\n  /** Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle */\n  handleDimension?: number = null;\n\n  /** Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar */\n  barDimension?: number = null;\n}\n",
    "import { PointerType } from './pointer-type';\n\nexport class ChangeContext {\n  value: number;\n  highValue: number;\n  pointerType: PointerType;\n}\n",
    "import { CustomStepDefinition } from './options';\n\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nexport class ValueHelper {\n  static linearValueToPosition(val: number, minVal: number, maxVal: number): number {\n    const range: number = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n\n  static logValueToPosition(val: number, minVal: number, maxVal: number): number {\n    val = Math.log(val);\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const range: number = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n\n  static linearPositionToValue(percent: number, minVal: number, maxVal: number): number {\n    return percent * (maxVal - minVal) + minVal;\n  }\n\n  static logPositionToValue(percent: number, minVal: number, maxVal: number): number {\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const value: number = percent * (maxVal - minVal) + minVal;\n    return Math.exp(value);\n  }\n\n  static findStepIndex(modelValue: number, stepsArray: CustomStepDefinition[]): number {\n    const differences: number[] = stepsArray.map((step: CustomStepDefinition): number => Math.abs(modelValue - step.value));\n\n    let minDifferenceIndex: number = 0;\n    for (let index: number = 0; index < stepsArray.length; index++) {\n      if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n        minDifferenceIndex = index;\n      }\n    }\n\n    return minDifferenceIndex;\n  }\n}\n",
    "import { ElementRef, Renderer2 } from '@angular/core';\nimport detectPassiveEvents from 'detect-passive-events';\n\n/**\n * Wrapper to support legacy jqLite interface\n *\n * The aim is to slowly phase out the usage of this wrapper and replace\n * any manual DOM manipulations with Angular bindings\n */\nexport class JqLiteWrapper {\n  private eventListeners: { [eventName: string]: (() => void)[] } = {};\n\n  constructor(private elemRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  addClass(clazz: string): void {\n    this.renderer.addClass(this.elemRef.nativeElement, clazz);\n  }\n\n  removeClass(clazz: string): void {\n    this.renderer.removeClass(this.elemRef.nativeElement, clazz);\n  }\n\n  hasClass(clazz: string): boolean {\n    return this.elemRef.nativeElement.classList.contains(clazz);\n  }\n\n  html(html: string): void {\n    this.elemRef.nativeElement.innerHTML = html;\n  }\n\n  css(style: string, value: string): void {\n    if (value !== '') {\n      this.renderer.setStyle(this.elemRef.nativeElement, style, value);\n    } else {\n      this.renderer.removeStyle(this.elemRef.nativeElement, style);\n    }\n  }\n\n  attr(attr: string, value: string): void {\n    if (value !== null) {\n      this.renderer.setAttribute(this.elemRef.nativeElement, attr, value);\n    } else {\n      this.renderer.removeAttribute(this.elemRef.nativeElement, attr);\n    }\n  }\n\n  getBoundingClientRect(): ClientRect {\n    return this.elemRef.nativeElement.getBoundingClientRect();\n  }\n\n  focus(): void {\n    this.elemRef.nativeElement.focus();\n  }\n\n  on(eventName: string, callback: (event: any) => boolean|void): void {\n    if (!this.eventListeners.hasOwnProperty(eventName)) {\n      this.eventListeners[eventName] = [];\n    }\n\n    const unsubscribe: () => void = this.renderer.listen(this.elemRef.nativeElement, eventName, callback);\n    this.eventListeners[eventName].push(unsubscribe);\n  }\n\n  onPassive(eventName: string, callback: (event: any) => void): void {\n    // Only use passive event listeners if the browser supports it\n    if (! detectPassiveEvents.hasSupport) {\n      this.on(eventName, callback);\n      return;\n    }\n\n    // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n\n    if (!this.eventListeners.hasOwnProperty(eventName)) {\n      this.eventListeners[eventName] = [];\n    }\n\n    this.elemRef.nativeElement.addEventListener(eventName, callback, {passive: true, capture: false});\n\n    const unsubscribe: () => void = (): void => {\n      this.elemRef.nativeElement.removeEventListener(eventName, callback, {passive: true, capture: false});\n    };\n\n    this.eventListeners[eventName].push(unsubscribe);\n  }\n\n  off(eventName?: string): void {\n    if (eventName) {\n      if (this.eventListeners.hasOwnProperty(eventName)) {\n        for (const unsubscribe of this.eventListeners[eventName]) {\n          unsubscribe();\n        }\n        delete this.eventListeners[eventName];\n      }\n    } else {\n      for (const eName of Object.keys(this.eventListeners)) {\n        this.off(eName);\n      }\n    }\n  }\n}\n",
    "/**\n * Throttled function\n *\n * Throttled function encapsulates a function object and allows calls to it,\n * but it limits the call rate to not exceed a given wait time.\n *\n * If there are multiple calls to the function all within the wait time window,\n * they will result in a single function call, which will be executed after\n * the wait time expires.\n */\nexport class ThrottledFunc {\n  private func: () => void;\n  private wait: number;\n  private previous: number = 0;\n  private timeout: any = null;\n\n  /**\n   * Create a new throttled function\n   *\n   * @param func function to call\n   * @param wait wait time in milliseconds\n   */\n  constructor(func: () => void, wait: number) {\n    this.func = func;\n    this.wait = wait;\n  }\n\n  /** Call the function */\n  call(): void {\n    const now: number = this.getTime();\n    const remaining: number = this.wait - (now - this.previous);\n\n    if (remaining <= 0) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n      this.previous = now;\n      this.func();\n    } else if (this.timeout === null) {\n      this.timeout = setTimeout(() => this.callLater(), remaining);\n    }\n  }\n\n  private getTime(): number {\n    return Date.now();\n  }\n\n  private callLater(): void {\n    this.previous = this.getTime();\n    this.timeout = null;\n    this.func();\n  }\n}\n",
    "/** Helper with compatibility functions to support different browsers */\nexport class CompatibilityHelper {\n  /** Workaround for  TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari) */\n  public static isTouchEvent(event: any): boolean {\n    if ((window as any).TouchEvent !== undefined) {\n      return event instanceof TouchEvent;\n    }\n\n    return event.touches !== undefined;\n  }\n}\n",
    "/** Helper with mathematical functions */\nexport class MathHelper {\n  /* Round numbers to a given number of significant digits */\n  static roundToPrecisionLimit(value: number, precisionLimit: number): number {\n    return +( value.toPrecision(precisionLimit) );\n  }\n\n  static clampToRange(value: number, floor: number, ceil: number): number {\n    return Math.min(Math.max(value, floor), ceil);\n  }\n}\n",
    "import {\n  Component,\n  OnInit,\n  Directive,\n  ViewChild,\n  AfterViewInit,\n  OnChanges,\n  OnDestroy,\n  HostBinding,\n  HostListener,\n  Input,\n  ElementRef,\n  Renderer2,\n  EventEmitter,\n  Output,\n  ContentChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  SimpleChanges,\n  forwardRef\n} from '@angular/core';\n\nimport {\n  ControlValueAccessor, NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport detectPassiveEvents from 'detect-passive-events';\n\nimport {\n  Options,\n  GetLegendFunction,\n  LabelType,\n  TranslateFunction,\n  ValueToPositionFunction,\n  PositionToValueFunction,\n  CustomStepDefinition,\n  CombineLabelsFunction,\n} from './options';\n\nimport { PointerType } from './pointer-type';\nimport { ChangeContext } from './change-context';\n\nimport { ValueHelper } from './value-helper';\n\nimport { JqLiteWrapper } from './jq-lite-wrapper';\n\nimport { ThrottledFunc } from './throttled-func';\nimport { CompatibilityHelper } from './compatibility-helper';\nimport { MathHelper } from './math-helper';\n\nexport class Tick {\n  selected: boolean;\n  style: any;\n  tooltip: string;\n  tooltipPlacement: string;\n  value: string;\n  valueTooltip: string;\n  valueTooltipPlacement: string;\n  legend: string;\n}\n\nclass Dragging {\n  active: boolean = false;\n  value: number = 0;\n  difference: number = 0;\n  position: number = 0;\n  lowLimit: number = 0;\n  highLimit: number = 0;\n}\n\nenum HandleType {\n  Low,\n  High\n}\n\nenum HandleLabelType {\n  Min,\n  Max\n}\n\n// TODO: slowly rewrite to angular\nexport class SliderElement extends JqLiteWrapper {\n  position: number = 0;\n  value: string; // TODO: this only applies to label elements; it should be moved to the specific directives where it's used\n  dimension: number;\n  alwaysHide: boolean = false;\n\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderRightOutSelElem]'})\nexport class RightOutSelDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderLeftOutSelElem]'})\nexport class LeftOutSelDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderFullBarElem]'})\nexport class FullBarDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderSelBarElem]'})\nexport class SelBarDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderMinHElem]'})\nexport class MinHDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderMaxHElem]'})\nexport class MaxHDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderFlrLabElem]'})\nexport class FlrLabDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderCeilLabElem]'})\nexport class CeilLabDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderMinLabElem]'})\nexport class MinLabDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderMaxLabElem]'})\nexport class MaxLabDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderCmbLabElem]'})\nexport class CmbLabDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\n@Directive({selector: '[ng5SliderTicksElem]'})\nexport class TicksDirective extends SliderElement {\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n\nconst NG5_SLIDER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => SliderComponent),\n  multi: true,\n};\n\n\n@Component({\n  selector: 'ng5-slider',\n  template: `<!-- // 0 (left) Highlight outside two handles -->\n<span ng5SliderLeftOutSelElem class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-left-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 1 (right) Highlight outside two handles -->\n<span ng5SliderRightOutSelElem class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-right-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 2 The slider bar -->\n<span ng5SliderFullBarElem class=\"ng5-slider-span ng5-slider-bar-wrapper\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 3 Highlight between two handles -->\n<span ng5SliderSelBarElem class=\"ng5-slider-span ng5-slider-bar-wrapper\">\n  <span class=\"ng5-slider-span ng5-slider-bar ng5-slider-selection\" [ngStyle]=\"barStyle\"></span>\n</span>\n<!-- // 4 Left slider handle -->\n<span ng5SliderMinHElem class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-min\" [ngStyle]=minPointerStyle></span>\n<!-- // 5 Right slider handle -->\n<span ng5SliderMaxHElem class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-max\" [ngStyle]=maxPointerStyle></span>\n<!-- // 6 Floor label -->\n<span ng5SliderFlrLabElem class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-floor\"></span>\n<!-- // 7 Ceiling label -->\n<span ng5SliderCeilLabElem class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-ceil\"></span>\n<!-- // 8 Label above left slider handle -->\n<span ng5SliderMinLabElem class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-value\"></span>\n<!-- // 9 Label above right slider handle -->\n<span ng5SliderMaxLabElem class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-high\"></span>\n<!-- // 10 Range label when the slider handles are close ex. 15 - 17 -->\n<span ng5SliderCmbLabElem class=\"ng5-slider-span ng5-slider-bubble ng5-slider-combined\"></span>\n<!-- // 11 The ticks -->\n<span ng5SliderTicksElem [hidden]=\"!showTicks\" class=\"ng5-slider-ticks\">\n  <span *ngFor=\"let t of ticks\" class=\"ng5-slider-tick\" [ngClass]=\"{'ng5-slider-selected': t.selected}\" [ngStyle]=\"t.style\">\n    <ng5-slider-tooltip-wrapper [template]=\"tooltipTemplate\" [tooltip]=\"t.tooltip\" [placement]=\"t.tooltipPlacement\"></ng5-slider-tooltip-wrapper>\n    <ng5-slider-tooltip-wrapper *ngIf=\"t.value != null\" class=\"ng5-slider-span ng5-slider-tick-value\"\n        [template]=\"tooltipTemplate\" [tooltip]=\"t.valueTooltip\" [placement]=\"t.valueTooltipPlacement\" [content]=\"t.value\"></ng5-slider-tooltip-wrapper>\n    <span *ngIf=\"t.legend != null\" class=\"ng5-slider-span ng5-slider-tick-legend\" [innerHTML]=\"t.legend\"></span>\n  </span>\n</span>`,\n  styles: [`::ng-deep .ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}::ng-deep .ng5-slider.with-legend{margin-bottom:40px}::ng-deep .ng5-slider[disabled]{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}::ng-deep .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}::ng-deep .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ng5-slider .ng5-slider-draggable{cursor:move}::ng-deep .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}::ng-deep .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}::ng-deep .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}::ng-deep .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}::ng-deep .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ng5-slider.ng5-slider-vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-bubble{left:16px!important;bottom:0}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ng5-slider.ng5-slider-vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}`],\n  host: { class: 'ng5-slider' },\n  providers: [NG5_SLIDER_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\n  // Model for low value slider. If only value is provided single slider will be rendered.\n  private _value: number;\n  @Input() set value(newValue: number) {\n    this._value = +newValue;\n  }\n  get value(): number {\n     return this._value;\n  }\n  // Output for low value slider to support two-way bindings\n  @Output() valueChange: EventEmitter<number> = new EventEmitter();\n\n  // Model for high value slider. Providing both value and highValue will render range slider.\n  private _highValue: number;\n  @Input() set highValue(newHighValue: number) {\n    this._highValue = +newHighValue;\n  }\n  get highValue(): number {\n     return this._highValue;\n  }\n  // Output for high value slider to support two-way bindings\n  @Output() highValueChange: EventEmitter<number> = new EventEmitter();\n\n  // Event emitted when user starts interaction with the slider\n  @Output() userChangeStart: EventEmitter<ChangeContext> = new EventEmitter();\n\n  // Event emitted on each change coming from user interaction\n  @Output() userChange: EventEmitter<ChangeContext> = new EventEmitter();\n\n  // Event emitted when user finishes interaction with the slider\n  @Output() userChangeEnd: EventEmitter<ChangeContext> = new EventEmitter();\n\n  // An object with all the other options of the slider.\n  // Each option can be updated at runtime and the slider will automatically be re-rendered.\n  private _options: Options = new Options();\n  @Input() set options(newOptions: Options) {\n    this._options = newOptions;\n  }\n  get options(): Options {\n     return this._options;\n  }\n\n  private manualRefreshSubscription: any;\n  // Input event that triggers slider refresh (re-positioning of slider elements)\n  @Input() set manualRefresh(manualRefresh: EventEmitter<void>) {\n    this.unsubscribeManualRefresh();\n\n    this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n      setTimeout(() =>  this.calcViewDimensions());\n    });\n  }\n\n  // Options synced to model options, based on defaults\n  private viewOptions: Options = new Options();\n  // Low value synced to model low value\n  private viewLowValue: number;\n  // High value synced to model high value\n  private viewHighValue: number;\n\n  public barStyle: any = {};\n  public minPointerStyle: any = {};\n  public maxPointerStyle: any = {};\n  public showTicks: boolean = false;\n  public ticks: Tick[] = [];\n\n  /* Slider DOM elements */\n\n  // Left highlight outside two handles\n  @ViewChild(LeftOutSelDirective)\n  private leftOutSelBar: SliderElement;\n\n  // Right highlight outside two handles\n  @ViewChild(RightOutSelDirective)\n  private rightOutSelBar: SliderElement;\n\n  // The whole slider bar\n  @ViewChild(FullBarDirective)\n  private fullBarElem: SliderElement;\n\n  // Highlight between two handles\n  @ViewChild(SelBarDirective)\n  private selBarElem: SliderElement;\n\n  // Left slider handle\n  @ViewChild(MinHDirective)\n  private minHElem: SliderElement;\n\n  // Right slider handle\n  @ViewChild(MaxHDirective)\n  private maxHElem: SliderElement;\n\n  // Floor label\n  @ViewChild(FlrLabDirective)\n  private flrLabElem: SliderElement;\n\n  // Ceiling label\n  @ViewChild(CeilLabDirective)\n  private ceilLabElem: SliderElement;\n\n  // Label above the low value\n  @ViewChild(MinLabDirective)\n  private minLabElem: SliderElement;\n\n  // Label above the high value\n  @ViewChild(MaxLabDirective)\n  private maxLabElem: SliderElement;\n\n  // Combined label\n  @ViewChild(CmbLabDirective)\n  private cmbLabElem: SliderElement;\n\n  // The ticks\n  @ViewChild(TicksDirective)\n  private ticksElem: SliderElement;\n\n  // Optional custom template for displaying tooltips\n  @ContentChild('tooltipTemplate')\n  public tooltipTemplate: TemplateRef<any>;\n\n  @HostBinding('class.ng5-slider-vertical')\n  public sliderElementVerticalClass: boolean = false;\n\n  @HostBinding('attr.disabled')\n  public sliderElementDisabledAttr: string = null;\n\n  // Slider type, true means range slider\n  get range(): boolean {\n    return this.value !== undefined && this.highValue !== undefined;\n  }\n\n  // Values recorded when first dragging the bar\n  private dragging: Dragging = new Dragging();\n\n  // Half of the width or height of the slider handles\n  private handleHalfDim: number = 0;\n\n  // Maximum position the slider handle can have\n  private maxPos: number = 0;\n\n  // Precision limit\n  private precisionLimit: number = 12;\n\n  // Step\n  private step: number = 1;\n\n  // The name of the handle we are currently tracking\n  private tracking: HandleType = null;\n\n  // Minimum value (floor) of the model\n  private minValue: number = 0;\n\n  // Maximum value (ceiling) of the model\n  private maxValue: number = 0;\n\n  // The delta between min and max value\n  private valueRange: number = 0;\n\n  /* If tickStep is set or ticksArray is specified.\n    In this case, ticks values should be displayed below the slider. */\n  private intermediateTicks: boolean = false;\n\n  // Set to true if init method already executed\n  private initHasRun: boolean = false;\n\n  // Used to call onStart on the first keydown event\n  private firstKeyDown: boolean = false;\n\n  // Internal flag to keep track of the visibility of combo label\n  private cmbLabelShown: boolean = false;\n\n  // Internal variable to keep track of the focus element\n  private currentFocusElement: {pointer: SliderElement, ref: HandleType} = null;\n\n  private barDimension: number;\n\n  private translate: TranslateFunction;\n  private combineLabels: CombineLabelsFunction;\n  private getLegend: GetLegendFunction;\n\n  private thrOnLowHandleChange: ThrottledFunc;\n  private thrOnHighHandleChange: ThrottledFunc;\n\n  private isDragging: boolean;\n  private touchId: number;\n\n  private onMoveUnsubscribe: () => void = null;\n  private onEndUnsubscribe: () => void = null;\n\n  private onTouchedCallback: (value: any) => void = null;\n  private onChangeCallback: (value: any) => void = null;\n\n  constructor(private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private changeDetectionRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n\n    // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n    // because these two settings are set through @HostBinding and Angular change detection\n    // mechanism doesn't like them changing in ngAfterViewInit()\n    this.setDisabledStateAttr();\n    this.setVerticalClass();\n  }\n\n  ngAfterViewInit(): void {\n    this.thrOnLowHandleChange = new ThrottledFunc((): void => { this.onLowHandleChange(); }, this.viewOptions.interval);\n    this.thrOnHighHandleChange = new ThrottledFunc((): void => { this.onHighHandleChange(); }, this.viewOptions.interval);\n\n    this.applyOptions();\n    this.syncLowValue();\n\n    if (this.range) {\n      this.syncHighValue();\n    }\n\n    this.manageElementsStyle();\n    this.setDisabledStateAttr();\n    this.calcViewDimensions();\n    this.setMinAndMax();\n    this.addAccessibility();\n    this.updateCeilLab();\n    this.updateFloorLab();\n    this.initHandles();\n    this.manageEventsBindings();\n\n    this.initHasRun = true;\n\n    // In some cases, the starting model values are actually outside valid range, so we need to fix this\n    if (this.value !== this.viewLowValue || (this.range && this.highValue !== this.viewHighValue)) {\n      setTimeout(() => this.applyModel(false));\n    }\n\n    // Run change detection manually to resolve some issues when init procedure changes values used in the view\n    this.changeDetectionRef.detectChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Always apply options first\n    if (changes.options) {\n      this.onChangeOptions(changes.options.previousValue, changes.options.currentValue);\n    }\n\n    // Then value changes\n    if (changes.value) {\n      this.onChangeValue(changes.value.previousValue, changes.value.currentValue);\n    }\n\n    if (changes.highValue) {\n      this.onChangeHighValue(changes.highValue.previousValue, changes.highValue.currentValue);\n    }\n  }\n\n  onChangeOptions(oldValue: Options, newValue: Options): void {\n    if (!this.initHasRun || newValue === oldValue) {\n      return;\n    }\n\n    this.applyOptions(); // need to be called before synchronizing the values\n    this.syncLowValue();\n    if (this.range) {\n      this.syncHighValue();\n    }\n    this.resetSlider();\n  }\n\n  onChangeValue(oldValue: number, newValue: number): void {\n    if (!this.initHasRun || newValue === oldValue) {\n      return;\n    }\n\n    this.thrOnLowHandleChange.call();\n  }\n\n  onChangeHighValue(oldValue: number, newValue: number): void {\n    if (!this.initHasRun || newValue === oldValue) {\n      return;\n    }\n    if (newValue != null) {\n      this.thrOnHighHandleChange.call();\n    }\n    if ( (this.range && newValue == null) ||\n         (!this.range && newValue != null) ) {\n      this.applyOptions();\n      this.resetSlider();\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.calcViewDimensions();\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeManualRefresh();\n    this.unbindEvents();\n    this.currentFocusElement = null;\n  }\n\n\n  // ControlValueAccessor interface\n  writeValue(obj: any): void {\n    if (obj instanceof Array) {\n\n      const oldValue: number = this.value;\n      const oldHighValue: number = this.highValue;\n\n      this.value = obj[0];\n      this.highValue = obj[1];\n\n      // We have to manually invoke change handlers since ngOnChanges() will not be called\n      this.onChangeValue(oldValue, this.value);\n      this.onChangeHighValue(oldHighValue, this.highValue);\n    } else {\n      const oldValue: number = this.value;\n\n      this.value = obj;\n\n      // We have to manually invoke change handler since ngOnChanges() will not be called\n      this.onChangeValue(oldValue, this.value);\n    }\n  }\n\n  registerOnChange(onChangeCallback: any): void {\n    this.onChangeCallback = onChangeCallback;\n  }\n\n  registerOnTouched(onTouchedCallback: any): void {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.viewOptions) {\n      this.viewOptions.disabled = isDisabled;\n      this.setDisabledStateAttr();\n    }\n  }\n\n\n  private unsubscribeManualRefresh(): void {\n    if (this.manualRefreshSubscription) {\n      this.manualRefreshSubscription.unsubscribe();\n      this.manualRefreshSubscription = null;\n    }\n  }\n\n  private getCurrentTrackingValue(): number {\n    if (this.tracking === null) {\n      return null;\n    }\n\n    return this.tracking === HandleType.Low ? this.viewLowValue : this.viewHighValue;\n  }\n\n  private syncLowValue(): void {\n    if (this.viewOptions.stepsArray) {\n      if (!this.viewOptions.bindIndexForStepsArray) {\n        this.viewLowValue = ValueHelper.findStepIndex(this.value, this.viewOptions.stepsArray);\n      } else {\n        this.viewLowValue = this.value;\n      }\n    } else {\n      this.viewLowValue = this.value;\n    }\n  }\n\n  private syncHighValue(): void {\n    if (this.viewOptions.stepsArray) {\n      if (!this.viewOptions.bindIndexForStepsArray) {\n        this.viewHighValue = ValueHelper.findStepIndex(this.highValue, this.viewOptions.stepsArray);\n      } else {\n        this.viewHighValue = this.highValue;\n      }\n    } else {\n      this.viewHighValue = this.highValue;\n    }\n  }\n\n  private getStepValue(sliderValue: number): number {\n    const step: CustomStepDefinition = this.viewOptions.stepsArray[sliderValue];\n    return step.value;\n  }\n\n  private applyLowValue(): void {\n    if (this.viewOptions.stepsArray) {\n      if (!this.viewOptions.bindIndexForStepsArray) {\n        this.value = this.getStepValue(this.viewLowValue);\n      } else {\n        this.value = this.viewLowValue;\n      }\n    } else {\n      this.value = this.viewLowValue;\n    }\n  }\n\n  private applyHighValue(): void {\n    if (this.viewOptions.stepsArray) {\n      if (!this.viewOptions.bindIndexForStepsArray) {\n        this.highValue = this.getStepValue(this.viewHighValue);\n      } else {\n        this.highValue = this.viewHighValue;\n      }\n    } else {\n      this.highValue = this.viewHighValue;\n    }\n  }\n\n  // Reflow the slider when the low handle changes (called with throttle)\n  private onLowHandleChange(): void {\n    this.normaliseLowValue();\n    if (this.range) {\n      this.normaliseRange(PointerType.Min);\n    }\n    this.syncLowValue();\n    if (this.range) {\n      this.syncHighValue();\n    }\n    this.setMinAndMax();\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    this.updateAriaAttributes();\n    if (this.range) {\n      this.updateCmbLabel();\n    }\n  }\n\n  // Reflow the slider when the high handle changes (called with throttle)\n  private onHighHandleChange(): void {\n    this.normaliseHighValue();\n    this.normaliseRange(PointerType.Max);\n    this.syncLowValue();\n    this.syncHighValue();\n    this.setMinAndMax();\n    this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    this.updateCmbLabel();\n    this.updateAriaAttributes();\n  }\n\n  // Make sure the low value is in allowed range\n  private normaliseLowValue(): void {\n    if (this.viewOptions.stepsArray) {\n      return;\n    }\n\n    const normalisedValue: number = MathHelper.clampToRange(this.value, this.viewOptions.floor, this.viewOptions.ceil);\n    if (this.value !== normalisedValue) {\n      this.value = normalisedValue;\n\n      // Push the value out, too\n      setTimeout(() => this.applyModel(false));\n    }\n  }\n\n  // Make sure high value is in allowed range\n  private normaliseHighValue(): void {\n    if (this.viewOptions.stepsArray) {\n      return;\n    }\n\n    const normalisedHighValue: number = MathHelper.clampToRange(this.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n    if (this.highValue !== normalisedHighValue) {\n      this.highValue = normalisedHighValue;\n\n      // Push the value out, too\n      setTimeout(() => this.applyModel(false));\n    }\n  }\n\n  // Make sure that range slider invariant (value <= highValue) is always satisfied\n  private normaliseRange(changedPointer: PointerType): void {\n    if (this.viewOptions.stepsArray) {\n      return;\n    }\n\n    if (this.range && this.value > this.highValue) {\n      // Depending on noSwitching, either swap values, or make them the same\n      if (this.viewOptions.noSwitching) {\n        if (changedPointer === PointerType.Max) {\n          this.highValue = this.value;\n        } else if (changedPointer === PointerType.Min) {\n          this.value = this.highValue;\n        }\n\n        // Push the values out, too\n        setTimeout(() => this.applyModel(false));\n      } else {\n        const tempValue: number = this.value;\n        this.value = this.highValue;\n        this.highValue = tempValue;\n\n        // Since we are changing both pointers at the same time, we need to invoke\n        // the change callback for the other pointer, too.\n        if (changedPointer === PointerType.Max) {\n          setTimeout(() => this.thrOnLowHandleChange.call());\n        } else if (changedPointer === PointerType.Min) {\n          setTimeout(() => this.thrOnHighHandleChange.call());\n        }\n\n        // Push the values out, too\n        setTimeout(() => this.applyModel(false));\n      }\n    }\n  }\n\n  // Read the user options and apply them to the slider model\n  private applyOptions(): void {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n\n    if (this.viewOptions.precisionLimit) {\n      this.precisionLimit = this.viewOptions.precisionLimit;\n    }\n\n    if (this.viewOptions.step <= 0) {\n       this.viewOptions.step = 1;\n    }\n\n    this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n    this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n    if (this.viewOptions.draggableRangeOnly) {\n      this.viewOptions.draggableRange = true;\n    }\n\n    this.viewOptions.showTicks = this.viewOptions.showTicks ||\n      this.viewOptions.showTicksValues ||\n      !!this.viewOptions.ticksArray;\n    if (this.viewOptions.showTicks && (this.viewOptions.tickStep !== null || this.viewOptions.ticksArray)) {\n      this.intermediateTicks = true;\n    }\n    this.showTicks = this.viewOptions.showTicks;\n\n    this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar ||\n      this.viewOptions.showSelectionBarEnd ||\n      this.viewOptions.showSelectionBarFromValue !== null;\n\n    if (this.viewOptions.stepsArray) {\n      this.parseStepsArray();\n    } else {\n      if (this.viewOptions.translate) {\n        this.translate = this.viewOptions.translate;\n      } else {\n        this.translate = (value: number): string => String(value);\n      }\n\n      this.getLegend = this.viewOptions.getLegend;\n    }\n\n    if (this.viewOptions.combineLabels) {\n      this.combineLabels = this.viewOptions.combineLabels;\n    } else {\n      this.combineLabels = (minValue: string, maxValue: string): string => {\n        return minValue + ' - ' + maxValue;\n      };\n    }\n  }\n\n  private parseStepsArray(): void {\n    this.viewOptions.floor = 0;\n    this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n    this.viewOptions.step = 1;\n\n    if (this.viewOptions.translate) {\n      this.translate = this.viewOptions.translate;\n    } else {\n      this.translate = (modelValue: number): string => {\n        if (this.viewOptions.bindIndexForStepsArray) {\n          return String(this.getStepValue(modelValue));\n        }\n        return String(modelValue);\n      };\n    }\n\n    this.getLegend = (index: number): string => {\n      const step: CustomStepDefinition = this.viewOptions.stepsArray[index];\n      return step.legend;\n    };\n  }\n\n  // Resets slider\n  private resetSlider(): void {\n    this.manageElementsStyle();\n    this.addAccessibility();\n    this.setMinAndMax();\n    this.updateCeilLab();\n    this.updateFloorLab();\n    this.unbindEvents();\n    this.manageEventsBindings();\n    this.setDisabledStateAttr();\n    this.calcViewDimensions();\n    this.refocusPointerIfNeeded();\n  }\n\n  private refocusPointerIfNeeded(): void {\n    if (this.currentFocusElement) {\n      this.onPointerFocus(this.currentFocusElement.pointer, this.currentFocusElement.ref);\n      this.focusElement(this.currentFocusElement.pointer);\n    }\n  }\n\n  // Update each elements style based on options\n  private manageElementsStyle(): void {\n    if (!this.range) {\n      this.maxHElem.css('display', 'none');\n    } else {\n      this.maxHElem.css('display', '');\n    }\n\n    this.alwaysHide(\n      this.flrLabElem,\n      this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels\n    );\n    this.alwaysHide(\n      this.ceilLabElem,\n      this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels\n    );\n\n    const hideLabelsForTicks: boolean = this.viewOptions.showTicksValues && !this.intermediateTicks;\n    this.alwaysHide(\n      this.minLabElem,\n      hideLabelsForTicks || this.viewOptions.hidePointerLabels\n    );\n    this.alwaysHide(\n      this.maxLabElem,\n      hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels\n    );\n    this.alwaysHide(\n      this.cmbLabElem,\n      hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels\n    );\n    this.alwaysHide(\n      this.selBarElem,\n      !this.range && !this.viewOptions.showSelectionBar\n    );\n    this.alwaysHide(\n      this.leftOutSelBar,\n      !this.range || !this.viewOptions.showOuterSelectionBars\n    );\n    this.alwaysHide(\n      this.rightOutSelBar,\n      !this.range || !this.viewOptions.showOuterSelectionBars\n    );\n\n    if (this.range && this.viewOptions.showOuterSelectionBars) {\n      this.fullBarElem.addClass('ng5-slider-transparent');\n    }\n\n    if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n      this.setVerticalClass();\n      // The above change in host component class will not be applied until the end of this cycle\n      // However, functions calculating the slider position expect the slider to be already styled as vertical\n      // So as a workaround, we need to reset the slider once again to compute the correct values\n      setTimeout((): void => { this.resetSlider(); });\n    }\n\n    if (this.viewOptions.draggableRange) {\n      this.selBarElem.addClass('ng5-slider-draggable');\n    } else {\n      this.selBarElem.removeClass('ng5-slider-draggable');\n    }\n\n    if (this.intermediateTicks && this.options.showTicksValues) {\n      this.ticksElem.addClass('ng5-slider-ticks-values-under');\n    }\n  }\n\n  private alwaysHide(el: SliderElement, hide: boolean): void {\n    el.alwaysHide = hide;\n    if (hide) {\n      this.hideEl(el);\n    } else {\n      this.showEl(el);\n    }\n  }\n\n  // Manage the events bindings based on readOnly and disabled options\n  private manageEventsBindings(): void {\n    if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n      this.unbindEvents();\n    } else {\n      this.bindEvents();\n    }\n  }\n\n  // Set the disabled state based on disabled option\n  private setDisabledStateAttr(): void {\n    this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n  }\n\n  // Set vertical class based on vertical option\n  private setVerticalClass(): void {\n    this.sliderElementVerticalClass = this.viewOptions.vertical;\n  }\n\n  // Reset label values\n  private resetLabelsValue(): void {\n    this.minLabElem.value = undefined;\n    this.maxLabElem.value = undefined;\n  }\n\n  // Initialize slider handles positions and labels\n  // Run only once during initialization and every time view port changes size\n  private initHandles(): void {\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n\n    /*\n   the order here is important since the selection bar should be\n   updated after the high handle but before the combined label\n   */\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n\n    this.updateSelectionBar();\n\n    if (this.range) {\n      this.updateCmbLabel();\n    }\n\n    this.updateTicksScale();\n  }\n\n  // Set label value and recalculate label dimensions\n  private setLabelValue(value: string, label: SliderElement): void {\n    let recalculateDimension: boolean = false;\n    const noLabelInjection: boolean = label.hasClass('no-label-injection');\n\n    if (!label.alwaysHide &&\n        (label.value === undefined ||\n         label.value.length !== value.length ||\n         (label.value.length > 0 && label.dimension === 0))) {\n      recalculateDimension = true;\n      label.value = value;\n    }\n\n    if (!noLabelInjection) {\n      label.html(value);\n    }\n\n    // Update width only when length of the label have changed\n    if (recalculateDimension) {\n      this.calculateElementDimension(label);\n    }\n  }\n\n  // Set maximum and minimum values for the slider and ensure the model and high value match these limits\n  private setMinAndMax(): void {\n    this.step = +this.viewOptions.step;\n\n    this.minValue = this.viewOptions.floor;\n    if (this.viewOptions.logScale && this.minValue === 0) {\n      throw Error('Can\\'t use floor=0 with logarithmic scale');\n    }\n\n    if (this.viewOptions.enforceStep) {\n      this.viewLowValue = this.roundStep(this.viewLowValue);\n      if (this.range) {\n        this.viewHighValue = this.roundStep(this.viewHighValue);\n      }\n    }\n\n    if (this.viewOptions.ceil != null) {\n      this.maxValue = this.viewOptions.ceil;\n    } else {\n      this.maxValue = this.viewOptions.ceil = this.range ? this.viewHighValue : this.viewLowValue;\n    }\n\n    if (this.viewOptions.enforceRange) {\n      this.viewLowValue = this.sanitizeValue(this.viewLowValue);\n      if (this.range) {\n        this.viewHighValue = this.sanitizeValue(this.viewHighValue);\n      }\n    }\n\n    this.applyLowValue();\n    if (this.range) {\n      this.applyHighValue();\n    }\n\n    this.valueRange = this.maxValue - this.minValue;\n  }\n\n  // Adds accessibility attributes, run only once during initialization\n  private addAccessibility(): void {\n    this.updateAriaAttributes();\n\n    this.minHElem.attr('role', 'slider');\n\n    if ( this.viewOptions.keyboardSupport &&\n      !(this.viewOptions.readOnly || this.viewOptions.disabled) ) {\n      this.minHElem.attr('tabindex', '0');\n    } else {\n      this.minHElem.attr('tabindex', '');\n    }\n\n    if (this.viewOptions.vertical) {\n      this.minHElem.attr('aria-orientation', 'vertical');\n    }\n\n    if (this.viewOptions.ariaLabel) {\n      this.minHElem.attr('aria-label', this.viewOptions.ariaLabel);\n    } else if (this.viewOptions.ariaLabelledBy) {\n      this.minHElem.attr('aria-labelledby', this.viewOptions.ariaLabelledBy);\n    }\n\n    if (this.range) {\n      this.maxHElem.attr('role', 'slider');\n\n      if (this.viewOptions.keyboardSupport &&\n        !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n        this.maxHElem.attr('tabindex', '0');\n      } else {\n        this.maxHElem.attr('tabindex', '');\n      }\n\n      if (this.viewOptions.vertical) {\n        this.maxHElem.attr('aria-orientation', 'vertical');\n      }\n\n      if (this.viewOptions.ariaLabelHigh) {\n        this.maxHElem.attr('aria-label', this.viewOptions.ariaLabelHigh);\n      } else if (this.viewOptions.ariaLabelledByHigh) {\n        this.maxHElem.attr('aria-labelledby', this.viewOptions.ariaLabelledByHigh);\n      }\n    }\n  }\n\n  // Updates aria attributes according to current values\n  private updateAriaAttributes(): void {\n    this.minHElem.attr('aria-valuenow', this.value.toString());\n    this.minHElem.attr('aria-valuetext', this.translate(this.value, LabelType.Low));\n    this.minHElem.attr('aria-valuemin', this.minValue.toString());\n    this.minHElem.attr('aria-valuemax', this.maxValue.toString());\n\n    if (this.range) {\n      this.maxHElem.attr('aria-valuenow', this.highValue.toString());\n      this.maxHElem.attr('aria-valuetext', this.translate(this.highValue, LabelType.High));\n      this.maxHElem.attr('aria-valuemin', this.minValue.toString());\n      this.maxHElem.attr('aria-valuemax', this.maxValue.toString());\n    }\n  }\n\n  // Calculate dimensions that are dependent on view port size\n  // Run once during initialization and every time view port changes size.\n  private calcViewDimensions(): void {\n    if (this.viewOptions.handleDimension) {\n      this.minHElem.dimension = this.viewOptions.handleDimension;\n    } else {\n      this.calculateElementDimension(this.minHElem);\n    }\n\n    const handleWidth: number = this.minHElem.dimension;\n\n    this.handleHalfDim = handleWidth / 2;\n\n    if (this.viewOptions.barDimension) {\n      this.fullBarElem.dimension = this.viewOptions.barDimension;\n    } else {\n      this.calculateElementDimension(this.fullBarElem);\n    }\n\n    this.barDimension = this.fullBarElem.dimension;\n\n    this.maxPos = this.barDimension - handleWidth;\n\n    if (this.initHasRun) {\n      this.updateFloorLab();\n      this.updateCeilLab();\n      this.initHandles();\n    }\n  }\n\n  // Update the ticks position\n  private updateTicksScale(): void {\n    if (!this.viewOptions.showTicks) {\n      return;\n    }\n\n    const ticksArray: number[] = this.viewOptions.ticksArray || this.getTicksArray();\n    const translate: string = this.viewOptions.vertical ? 'translateY' : 'translateX';\n\n    if (this.viewOptions.rightToLeft) {\n      ticksArray.reverse();\n    }\n\n    this.ticks = ticksArray.map((value: number): Tick => {\n      let position: number = this.valueToPosition(value);\n\n      if (this.viewOptions.vertical) {\n        position = this.maxPos - position;\n      }\n\n      const translation: string = translate + '(' + Math.round(position) + 'px)';\n      const tick: Tick = new Tick();\n      tick.selected = this.isTickSelected(value);\n      tick.style = {\n        '-webkit-transform': translation,\n        '-moz-transform': translation,\n        '-o-transform': translation,\n        '-ms-transform': translation,\n        transform: translation,\n      };\n      if (tick.selected && this.viewOptions.getSelectionBarColor) {\n        tick.style['background-color'] = this.getSelectionBarColor();\n      }\n      if (!tick.selected && this.viewOptions.getTickColor) {\n        tick.style['background-color'] = this.getTickColor(value);\n      }\n      if (this.viewOptions.ticksTooltip) {\n        tick.tooltip = this.viewOptions.ticksTooltip(value);\n        tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n      }\n      if (this.viewOptions.showTicksValues && (value % this.viewOptions.tickValueStep === 0)) {\n        tick.value = this.getDisplayValue(value, LabelType.TickValue);\n        if (this.viewOptions.ticksValuesTooltip) {\n          tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n          tick.valueTooltipPlacement = this.viewOptions.vertical\n            ? 'right'\n            : 'top';\n        }\n      }\n      if (this.getLegend) {\n        const legend: string = this.getLegend(value);\n        if (legend) {\n          tick.legend = legend;\n        }\n      }\n      return tick;\n    });\n  }\n\n  private getTicksArray(): number[] {\n    const step: number = (this.viewOptions.tickStep !== null) ? this.viewOptions.tickStep : this.step;\n    const ticksArray: number[] = [];\n    for (let value: number = this.minValue; value <= this.maxValue; value += step) {\n      ticksArray.push(value);\n    }\n    return ticksArray;\n  }\n\n  private isTickSelected(value: number): boolean {\n    if (!this.range) {\n      if (this.viewOptions.showSelectionBarFromValue !== null) {\n        const center: number = this.viewOptions.showSelectionBarFromValue;\n        if (this.viewLowValue > center &&\n            value >= center &&\n            value <= this.viewLowValue) {\n          return true;\n        } else if (this.viewLowValue < center &&\n                   value <= center &&\n                   value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBarEnd) {\n        if (value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n        return true;\n      }\n    }\n\n    if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Update position of the floor label\n  private updateFloorLab(): void {\n    if (!this.flrLabElem.alwaysHide) {\n      this.setLabelValue(this.getDisplayValue(this.minValue, LabelType.Floor), this.flrLabElem);\n      this.calculateElementDimension(this.flrLabElem);\n      const position: number = this.viewOptions.rightToLeft\n        ? this.barDimension - this.flrLabElem.dimension\n        : 0;\n      this.setPosition(this.flrLabElem, position);\n    }\n  }\n\n  // Update position of the ceiling label\n  private updateCeilLab(): void {\n    if (!this.ceilLabElem.alwaysHide) {\n      this.setLabelValue(this.getDisplayValue(this.maxValue, LabelType.Ceil), this.ceilLabElem);\n      this.calculateElementDimension(this.ceilLabElem);\n      const position: number = this.viewOptions.rightToLeft\n        ? 0\n        : this.barDimension - this.ceilLabElem.dimension;\n      this.setPosition(this.ceilLabElem, position);\n    }\n  }\n\n  // Update slider handles and label positions\n  private updateHandles(which: HandleType, newPos: number): void {\n    if (which === HandleType.Low) {\n      this.updateLowHandle(newPos);\n    } else {\n      this.updateHighHandle(newPos);\n    }\n\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    if (this.range) {\n      this.updateCmbLabel();\n    }\n  }\n\n  // Helper function to work out the position for handle labels depending on RTL or not\n  private getHandleLabelPos(labelType: HandleLabelType, newPos: number): number {\n    const labelDimension: number = labelType === HandleLabelType.Min ? this.minLabElem.dimension : this.maxLabElem.dimension;\n    const nearHandlePos: number = newPos - labelDimension / 2 + this.handleHalfDim;\n    const endOfBarPos: number = this.barDimension - labelDimension;\n\n    if (!this.viewOptions.boundPointerLabels) {\n      return nearHandlePos;\n    }\n\n    if ((this.viewOptions.rightToLeft && labelType === HandleLabelType.Min) ||\n       (!this.viewOptions.rightToLeft && labelType === HandleLabelType.Max)) {\n      return Math.min(nearHandlePos, endOfBarPos);\n    } else {\n      return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n    }\n  }\n\n  // Update low slider handle position and label\n  private updateLowHandle(newPos: number): void {\n    this.setPosition(this.minHElem, newPos);\n    this.setLabelValue(this.getDisplayValue(this.viewLowValue, LabelType.Low), this.minLabElem);\n    this.setPosition(\n      this.minLabElem,\n      this.getHandleLabelPos(HandleLabelType.Min, newPos)\n    );\n\n    if (this.viewOptions.getPointerColor) {\n      const pointercolor: string = this.getPointerColor(PointerType.Min);\n      this.minPointerStyle = {\n        backgroundColor: pointercolor,\n      };\n    }\n\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.shFloorCeil();\n    }\n  }\n\n  // Update high slider handle position and label\n  private updateHighHandle(newPos: number): void {\n    this.setPosition(this.maxHElem, newPos);\n    this.setLabelValue(this.getDisplayValue(this.viewHighValue, LabelType.High), this.maxLabElem);\n    this.setPosition(\n      this.maxLabElem,\n      this.getHandleLabelPos(HandleLabelType.Max, newPos)\n    );\n\n    if (this.viewOptions.getPointerColor) {\n      const pointercolor: string = this.getPointerColor(PointerType.Max);\n      this.maxPointerStyle = {\n        backgroundColor: pointercolor,\n      };\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.shFloorCeil();\n    }\n  }\n\n  // Show/hide floor/ceiling label\n  private shFloorCeil(): void {\n    // Show based only on hideLimitLabels if pointer labels are hidden\n    if (this.viewOptions.hidePointerLabels) {\n      return;\n    }\n    let flHidden: boolean = false;\n    let clHidden: boolean = false;\n    const isMinLabAtFloor: boolean = this.isLabelBelowFloorLab(this.minLabElem);\n    const isMinLabAtCeil: boolean = this.isLabelAboveCeilLab(this.minLabElem);\n    const isMaxLabAtCeil: boolean = this.isLabelAboveCeilLab(this.maxLabElem);\n    const isCmbLabAtFloor: boolean = this.isLabelBelowFloorLab(this.cmbLabElem);\n    const isCmbLabAtCeil: boolean = this.isLabelAboveCeilLab(this.cmbLabElem);\n\n    if (isMinLabAtFloor) {\n      flHidden = true;\n      this.hideEl(this.flrLabElem);\n    } else {\n      flHidden = false;\n      this.showEl(this.flrLabElem);\n    }\n\n    if (isMinLabAtCeil) {\n      clHidden = true;\n      this.hideEl(this.ceilLabElem);\n    } else {\n      clHidden = false;\n      this.showEl(this.ceilLabElem);\n    }\n\n    if (this.range) {\n      const hideCeil: boolean = this.cmbLabelShown ? isCmbLabAtCeil : isMaxLabAtCeil;\n      const hideFloor: boolean = this.cmbLabelShown\n        ? isCmbLabAtFloor\n        : isMinLabAtFloor;\n\n      if (hideCeil) {\n        this.hideEl(this.ceilLabElem);\n      } else if (!clHidden) {\n        this.showEl(this.ceilLabElem);\n      }\n\n      // Hide or show floor label\n      if (hideFloor) {\n        this.hideEl(this.flrLabElem);\n      } else if (!flHidden) {\n        this.showEl(this.flrLabElem);\n      }\n    }\n  }\n\n  private isLabelBelowFloorLab(label: SliderElement): boolean {\n    const isRTL: boolean = this.viewOptions.rightToLeft;\n    const pos: number = label.position;\n    const dim: number = label.dimension;\n    const floorPos: number = this.flrLabElem.position;\n    const floorDim: number = this.flrLabElem.dimension;\n    return isRTL\n      ? pos + dim >= floorPos - 2\n      : pos <= floorPos + floorDim + 2;\n  }\n\n  private isLabelAboveCeilLab(label: SliderElement): boolean {\n    const isRTL: boolean = this.viewOptions.rightToLeft;\n    const pos: number = label.position;\n    const dim: number = label.dimension;\n    const ceilPos: number = this.ceilLabElem.position;\n    const ceilDim: number = this.ceilLabElem.dimension;\n    return isRTL ? pos <= ceilPos + ceilDim + 2 : pos + dim >= ceilPos - 2;\n  }\n\n  // Update slider selection bar, combined label and range label\n  private updateSelectionBar(): void {\n    let position: number = 0;\n    let dimension: number = 0;\n    const isSelectionBarFromRight: boolean = this.viewOptions.rightToLeft\n        ? !this.viewOptions.showSelectionBarEnd\n        : this.viewOptions.showSelectionBarEnd;\n    const positionForRange: number = this.viewOptions.rightToLeft\n        ? this.maxHElem.position + this.handleHalfDim\n        : this.minHElem.position + this.handleHalfDim;\n\n    if (this.range) {\n      dimension = Math.abs(this.maxHElem.position - this.minHElem.position);\n      position = positionForRange;\n    } else {\n      if (this.viewOptions.showSelectionBarFromValue !== null) {\n        const center: number = this.viewOptions.showSelectionBarFromValue;\n        const centerPosition: number = this.valueToPosition(center);\n        const isModelGreaterThanCenter: boolean = this.viewOptions.rightToLeft\n            ? this.viewLowValue <= center\n            : this.viewLowValue > center;\n        if (isModelGreaterThanCenter) {\n          dimension = this.minHElem.position - centerPosition;\n          position = centerPosition + this.handleHalfDim;\n        } else {\n          dimension = centerPosition - this.minHElem.position;\n          position = this.minHElem.position + this.handleHalfDim;\n        }\n      } else if (isSelectionBarFromRight) {\n        dimension = Math.ceil(Math.abs(this.maxPos - this.minHElem.position) + this.handleHalfDim);\n        position = Math.floor(this.minHElem.position + this.handleHalfDim);\n      } else {\n        dimension = this.minHElem.position + this.handleHalfDim;\n        position = 0;\n      }\n    }\n    this.setDimension(this.selBarElem, dimension);\n    this.setPosition(this.selBarElem, position);\n    if (this.range && this.viewOptions.showOuterSelectionBars) {\n      if (this.viewOptions.rightToLeft) {\n        this.setDimension(this.rightOutSelBar, position);\n        this.setPosition(this.rightOutSelBar, 0);\n        this.calculateElementDimension(this.fullBarElem);\n        this.setDimension(\n          this.leftOutSelBar,\n          this.fullBarElem.dimension - (position + dimension)\n        );\n        this.setPosition(this.leftOutSelBar, position + dimension);\n      } else {\n        this.setDimension(this.leftOutSelBar, position);\n        this.setPosition(this.leftOutSelBar, 0);\n        this.calculateElementDimension(this.fullBarElem);\n        this.setDimension(\n          this.rightOutSelBar,\n          this.fullBarElem.dimension - (position + dimension)\n        );\n        this.setPosition(this.rightOutSelBar, position + dimension);\n      }\n    }\n    if (this.viewOptions.getSelectionBarColor) {\n      const color: string = this.getSelectionBarColor();\n      this.barStyle = {\n        backgroundColor: color,\n      };\n    } else if (this.viewOptions.selectionBarGradient) {\n      const offset: number = this.viewOptions.showSelectionBarFromValue !== null\n            ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue)\n            : 0;\n      const reversed: boolean = (offset - position > 0 && !isSelectionBarFromRight) || (offset - position <= 0 && isSelectionBarFromRight);\n      const direction: string = this.viewOptions.vertical\n          ? reversed ? 'bottom' : 'top'\n          : reversed ? 'left' : 'right';\n      this.barStyle = {\n        backgroundImage:\n          'linear-gradient(to ' +\n          direction +\n          ', ' +\n          this.viewOptions.selectionBarGradient.from +\n          ' 0%,' +\n          this.viewOptions.selectionBarGradient.to +\n          ' 100%)',\n      };\n      if (this.viewOptions.vertical) {\n        this.barStyle.backgroundPosition =\n          'center ' +\n          (offset +\n            dimension +\n            position +\n            (reversed ? -this.handleHalfDim : 0)) +\n          'px';\n        this.barStyle.backgroundSize =\n          '100% ' + (this.barDimension - this.handleHalfDim) + 'px';\n      } else {\n        this.barStyle.backgroundPosition =\n          offset -\n          position +\n          (reversed ? this.handleHalfDim : 0) +\n          'px center';\n        this.barStyle.backgroundSize =\n          this.barDimension - this.handleHalfDim + 'px 100%';\n      }\n    }\n  }\n\n  // Wrapper around the getSelectionBarColor of the user to pass to correct parameters\n  private getSelectionBarColor(): string {\n    if (this.range) {\n      return this.viewOptions.getSelectionBarColor(\n        this.value,\n        this.highValue\n      );\n    }\n    return this.viewOptions.getSelectionBarColor(this.value);\n  }\n\n  // Wrapper around the getPointerColor of the user to pass to  correct parameters\n  private getPointerColor(pointerType: PointerType): string {\n    if (pointerType === PointerType.Max) {\n      return this.viewOptions.getPointerColor(\n        this.highValue,\n        pointerType\n      );\n    }\n    return this.viewOptions.getPointerColor(\n      this.value,\n      pointerType\n    );\n  }\n\n  // Wrapper around the getTickColor of the user to pass to correct parameters\n  private getTickColor(value: number): string {\n    return this.viewOptions.getTickColor(value);\n  }\n\n  // Update combined label position and value\n  private updateCmbLabel(): void {\n    let isLabelOverlap: boolean = null;\n    if (this.viewOptions.rightToLeft) {\n      isLabelOverlap =\n        this.minLabElem.position - this.minLabElem.dimension - 10 <= this.maxLabElem.position;\n    } else {\n      isLabelOverlap =\n        this.minLabElem.position + this.minLabElem.dimension + 10 >= this.maxLabElem.position;\n    }\n\n    if (isLabelOverlap) {\n      const lowTr: string = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n      const highTr: string = this.getDisplayValue(this.viewHighValue, LabelType.High);\n      const labelVal: string = this.viewOptions.rightToLeft\n        ? this.combineLabels(highTr, lowTr)\n        : this.combineLabels(lowTr, highTr);\n\n      this.setLabelValue(labelVal, this.cmbLabElem);\n      const pos: number = this.viewOptions.boundPointerLabels\n        ? Math.min(\n            Math.max(\n              this.selBarElem.position +\n                this.selBarElem.dimension / 2 -\n                this.cmbLabElem.dimension / 2,\n              0\n            ),\n            this.barDimension - this.cmbLabElem.dimension\n          )\n        : this.selBarElem.position + this.selBarElem.dimension / 2 - this.cmbLabElem.dimension / 2;\n\n      this.setPosition(this.cmbLabElem, pos);\n      this.cmbLabelShown = true;\n      this.hideEl(this.minLabElem);\n      this.hideEl(this.maxLabElem);\n      this.showEl(this.cmbLabElem);\n    } else {\n      this.cmbLabelShown = false;\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      this.showEl(this.maxLabElem);\n      this.showEl(this.minLabElem);\n      this.hideEl(this.cmbLabElem);\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.shFloorCeil();\n    }\n  }\n\n  // Return the translated value if a translate function is provided else the original value\n  private getDisplayValue(value: number, which: LabelType): string {\n    if (this.viewOptions.stepsArray && !this.viewOptions.bindIndexForStepsArray) {\n      value = this.getStepValue(value);\n    }\n    return this.translate(value, which);\n  }\n\n  // Round value to step and precision based on minValue\n  private roundStep(value: number, customStep?: number): number {\n    const step: number = customStep ? customStep : this.step;\n    let steppedDifference: number = MathHelper.roundToPrecisionLimit((value - this.minValue) / step, this.precisionLimit);\n    steppedDifference = Math.round(steppedDifference) * step;\n    return MathHelper.roundToPrecisionLimit(this.minValue + steppedDifference, this.precisionLimit);\n  }\n\n  // Hide element\n  private hideEl(element: SliderElement): void {\n    element.css('visibility', 'hidden');\n  }\n\n  // Show element\n  private showEl(element: SliderElement): void {\n    if (!!element.alwaysHide) {\n      return;\n    }\n\n    element.css('visibility', 'visible');\n  }\n\n  // Set element left/top position depending on whether slider is horizontal or vertical\n  private setPosition(elem: SliderElement, pos: number): void {\n    elem.position = pos;\n    if (this.viewOptions.vertical) {\n      elem.css('bottom', Math.round(pos) + 'px');\n    } else {\n      elem.css('left', Math.round(pos) + 'px');\n    }\n  }\n\n  // Calculate element's width/height depending on whether slider is horizontal or vertical\n  private calculateElementDimension(elem: SliderElement): void {\n    const val: ClientRect = elem.getBoundingClientRect();\n    if (this.viewOptions.vertical) {\n      elem.dimension = (val.bottom - val.top) * this.viewOptions.scale;\n    } else {\n      elem.dimension = (val.right - val.left) * this.viewOptions.scale;\n    }\n  }\n\n  // Set element width/height depending on whether slider is horizontal or vertical\n  private setDimension(elem: SliderElement, dim: number): number {\n    elem.dimension = dim;\n    if (this.viewOptions.vertical) {\n      elem.css('height', Math.round(dim) + 'px');\n    } else {\n      elem.css('width', Math.round(dim) + 'px');\n    }\n    return dim;\n  }\n\n  // Returns a value that is within slider range\n  private sanitizeValue(val: number): number {\n    return Math.min(Math.max(val, this.minValue), this.maxValue);\n  }\n\n  // Translate value to pixel position\n  private valueToPosition(val: number): number {\n    let fn: ValueToPositionFunction  = ValueHelper.linearValueToPosition;\n    if (this.viewOptions.customValueToPosition) {\n      fn = this.viewOptions.customValueToPosition;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logValueToPosition;\n    }\n\n    val = this.sanitizeValue(val);\n    let percent: number = fn(val, this.minValue, this.maxValue) || 0;\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n    return percent * this.maxPos;\n  }\n\n  // Translate position to model value\n  private positionToValue(position: number): number {\n    let percent: number = position / this.maxPos;\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n    let fn: PositionToValueFunction = ValueHelper.linearPositionToValue;\n    if (this.viewOptions.customPositionToValue) {\n      fn = this.viewOptions.customPositionToValue;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logPositionToValue;\n    }\n    return fn(percent, this.minValue, this.maxValue) || 0;\n  }\n\n  // Get the X-coordinate or Y-coordinate of an event\n  private getEventXY(event: MouseEvent|TouchEvent, targetTouchId: number): number {\n    if (event instanceof MouseEvent) {\n      return this.viewOptions.vertical ? event.clientY : event.clientX;\n    }\n\n    let touchIndex: number = 0;\n    const touches: TouchList = event.touches;\n    if (targetTouchId !== undefined) {\n      for (let i: number = 0; i < touches.length; i++) {\n        if (touches[i].identifier === targetTouchId) {\n          touchIndex = i;\n          break;\n        }\n      }\n    }\n\n    // Return the target touch or if the target touch was not found in the event\n    // returns the coordinates of the first touch\n    return this.viewOptions.vertical ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n  }\n\n  // Compute the event position depending on whether the slider is horizontal or vertical\n  private getEventPosition(event: MouseEvent|TouchEvent, targetTouchId?: number): number {\n    const sliderElementBoundingRect: ClientRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    const sliderPos: number = this.viewOptions.vertical ?\n      sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n    let eventPos: number = 0;\n    if (this.viewOptions.vertical) {\n      eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n    } else {\n      eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n    }\n    return eventPos * this.viewOptions.scale - this.handleHalfDim;\n  }\n\n  // Get the handle closest to an event\n  private getNearestHandle(event: MouseEvent|TouchEvent): SliderElement {\n    if (!this.range) {\n      return this.minHElem;\n    }\n\n    const position: number = this.getEventPosition(event);\n    const distanceMin: number = Math.abs(position - this.minHElem.position);\n    const distanceMax: number = Math.abs(position - this.maxHElem.position);\n\n    if (distanceMin < distanceMax) {\n      return this.minHElem;\n    } else if (distanceMin > distanceMax) {\n      return this.maxHElem;\n    } else if (!this.viewOptions.rightToLeft) {\n      // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n      return position < this.minHElem.position ? this.minHElem : this.maxHElem;\n    } else {\n      // reverse in rtl\n      return position > this.minHElem.position ? this.minHElem : this.maxHElem;\n    }\n  }\n\n  // Wrapper function to focus an angular element\n  private focusElement(el: SliderElement): void {\n    el.focus();\n  }\n\n  // Bind mouse and touch events to slider handles\n  private bindEvents(): void {\n    const draggableRange: boolean = this.viewOptions.draggableRange;\n\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selBarElem.on('mousedown', (event: MouseEvent): void => this.onBarStart(draggableRange, null, event, true, true, true));\n    }\n\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHElem.on('mousedown', (event: MouseEvent): void => this.onBarStart(draggableRange, null, event, true, true));\n      this.maxHElem.on('mousedown', (event: MouseEvent): void => this.onBarStart(draggableRange, null, event, true, true));\n    } else {\n      this.minHElem.on('mousedown', (event: MouseEvent): void => this.onStart(this.minHElem, HandleType.Low, event, true, true));\n\n      if (this.range) {\n        this.maxHElem.on('mousedown', (event: MouseEvent): void => this.onStart(this.maxHElem, HandleType.High, event, true, true));\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElem.on('mousedown', (event: MouseEvent): void => { this.onStart(null, null, event, true, true, true); });\n        this.ticksElem.on('mousedown', (event: MouseEvent): void => { this.onStart(null, null, event, true, true, true, true); });\n      }\n    }\n\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selBarElem.onPassive('touchstart', (event: TouchEvent): void => this.onBarStart(draggableRange, null, event, true, true));\n    }\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHElem.onPassive('touchstart', (event: TouchEvent): void => this.onBarStart(draggableRange, null, event, true, true));\n      this.maxHElem.onPassive('touchstart', (event: TouchEvent): void => this.onBarStart(draggableRange, null, event, true, true));\n    } else {\n      this.minHElem.onPassive('touchstart', (event: TouchEvent): void => this.onStart(this.minHElem, HandleType.Low, event, true, true));\n      if (this.range) {\n        this.maxHElem.onPassive('touchstart', (event: TouchEvent): void => this.onStart(this.maxHElem, HandleType.High, event, true, true));\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElem.onPassive('touchstart', (event: TouchEvent): void => this.onStart(null, null, event, true, true, true));\n        this.ticksElem.onPassive('touchstart', (event: TouchEvent): void => this.onStart(null, null, event, false, false, true, true));\n      }\n    }\n\n    if (this.viewOptions.keyboardSupport) {\n      this.minHElem.on('focus', (): void => this.onPointerFocus(this.minHElem, HandleType.Low));\n      if (this.range) {\n        this.maxHElem.on('focus', (): void => this.onPointerFocus(this.maxHElem, HandleType.High));\n      }\n    }\n  }\n\n  // Unbind mouse and touch events to slider handles\n  private unbindEvents(): void {\n    this.minHElem.off();\n    this.maxHElem.off();\n    this.fullBarElem.off();\n    this.selBarElem.off();\n    this.ticksElem.off();\n  }\n\n  private onBarStart(draggableRange: boolean, pointer: SliderElement, event: MouseEvent|TouchEvent,\n    bindMove: boolean, bindEnd: boolean, simulateImmediateMove?: boolean, simulateImmediateEnd?: boolean): void {\n    if (draggableRange) {\n      this.onDragStart(pointer, HandleType.High, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n    } else {\n      this.onStart(pointer, HandleType.Low, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n    }\n  }\n\n  // onStart event handler\n  private onStart(pointer: SliderElement, ref: HandleType, event: MouseEvent|TouchEvent,\n      bindMove: boolean, bindEnd: boolean, simulateImmediateMove?: boolean, simulateImmediateEnd?: boolean): void {\n    let moveEvent: string = '';\n    let endEvent: string = '';\n\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      moveEvent = 'touchmove';\n      endEvent = 'touchend';\n    } else {\n      moveEvent = 'mousemove';\n      endEvent = 'mouseup';\n    }\n\n    event.stopPropagation();\n    // Only call preventDefault() when handling non-passive events (passive events don't need it)\n    if (!CompatibilityHelper.isTouchEvent(event) || !detectPassiveEvents.hasSupport) {\n      event.preventDefault();\n    }\n\n    // We have to do this in case the HTML where the sliders are on\n    // have been animated into view.\n    this.calcViewDimensions();\n\n    if (pointer) {\n      this.tracking = ref;\n    } else {\n      pointer = this.getNearestHandle(event);\n      this.tracking = pointer === this.minHElem ? HandleType.Low : HandleType.High;\n    }\n\n    pointer.addClass('ng5-slider-active');\n\n    if (this.viewOptions.keyboardSupport) {\n      this.focusElement(pointer);\n    }\n\n    if (bindMove) {\n      const ehMove: ((e: MouseEvent|TouchEvent) => void) =\n        (e: MouseEvent|TouchEvent): void => this.dragging.active ? this.onDragMove(pointer, e) : this.onMove(pointer, e);\n\n      if (this.onMoveUnsubscribe !== null) {\n        this.onMoveUnsubscribe();\n      }\n      this.onMoveUnsubscribe = this.renderer.listen('document', moveEvent, ehMove);\n    }\n\n    if (bindEnd) {\n      const ehEnd: ((e: MouseEvent|TouchEvent) => void) =\n        (e: MouseEvent|TouchEvent): void => this.onEnd(e);\n      if (this.onEndUnsubscribe !== null) {\n        this.onEndUnsubscribe();\n      }\n      this.onEndUnsubscribe = this.renderer.listen('document', endEvent, ehEnd);\n    }\n\n    this.userChangeStart.emit(this.getChangeContext());\n\n    if (CompatibilityHelper.isTouchEvent(event) && (event as TouchEvent).changedTouches) {\n      // Store the touch identifier\n      if (!this.touchId) {\n        this.isDragging = true;\n        this.touchId = (event as TouchEvent).changedTouches[0].identifier;\n      }\n    }\n\n    // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n    // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n    // As a workaround, we simulate the first move event and the end event if it's necessary\n    if (simulateImmediateMove) {\n      this.onMove(pointer, event, true);\n    }\n\n    if (simulateImmediateEnd) {\n      this.onEnd(event);\n    }\n  }\n\n  // onMove event handler\n  private onMove(pointer: SliderElement, event: MouseEvent|TouchEvent, fromTick?: boolean): void {\n    let touchForThisSlider: Touch;\n\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      const changedTouches: TouchList = (event as TouchEvent).changedTouches;\n      for (let i: number = 0; i < changedTouches.length; i++) {\n        if (changedTouches[i].identifier === this.touchId) {\n          touchForThisSlider = changedTouches[i];\n          break;\n        }\n      }\n\n      if (!touchForThisSlider) {\n        return;\n      }\n    }\n\n    const newPos: number = this.getEventPosition(\n        event,\n        touchForThisSlider ? touchForThisSlider.identifier : undefined\n      );\n    let newValue: number;\n    const ceilValue: number = this.viewOptions.rightToLeft\n        ? this.minValue\n        : this.maxValue;\n    const flrValue: number = this.viewOptions.rightToLeft ? this.maxValue : this.minValue;\n\n    if (newPos <= 0) {\n      newValue = flrValue;\n    } else if (newPos >= this.maxPos) {\n      newValue = ceilValue;\n    } else {\n      newValue = this.positionToValue(newPos);\n      if (fromTick && this.viewOptions.tickStep !== null) {\n        newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n      } else {\n        newValue = this.roundStep(newValue);\n      }\n    }\n    this.positionTrackingHandle(newValue);\n  }\n\n  private onEnd(event: MouseEvent|TouchEvent): void {\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      const changedTouches: TouchList = (event as TouchEvent).changedTouches;\n      if (changedTouches[0].identifier !== this.touchId) {\n        return;\n      }\n    }\n\n    this.isDragging = false;\n    this.touchId = null;\n\n    if (!this.viewOptions.keyboardSupport) {\n      this.minHElem.removeClass('ng5-slider-active');\n      this.maxHElem.removeClass('ng5-slider-active');\n      this.tracking = null;\n    }\n    this.dragging.active = false;\n\n    if (this.onMoveUnsubscribe !== null) {\n      this.onMoveUnsubscribe();\n    }\n    if (this.onEndUnsubscribe !== null) {\n      this.onEndUnsubscribe();\n    }\n\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n\n  private onPointerFocus(pointer: SliderElement, ref: HandleType): void {\n    this.tracking = ref;\n    pointer.on('blur', (): void => this.onPointerBlur(pointer));\n    pointer.on('keydown', (event: KeyboardEvent): void => this.onKeyboardEvent(event));\n    pointer.on('keyup', (): void => this.onKeyUp());\n    this.firstKeyDown = true;\n    pointer.addClass('ng5-slider-active');\n\n    this.currentFocusElement = {\n      pointer: pointer,\n      ref: ref,\n    };\n  }\n\n  private onKeyUp(): void {\n    this.firstKeyDown = true;\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n\n  private onPointerBlur(pointer: SliderElement): void {\n    pointer.off('blur');\n    pointer.off('keydown');\n    pointer.off('keyup');\n    pointer.removeClass('ng5-slider-active');\n    if (!this.isDragging) {\n      this.tracking = null;\n      this.currentFocusElement = null;\n    }\n  }\n\n  private getKeyActions(currentValue: number): {[key: string]: number} {\n    let increaseStep: number = currentValue + this.step;\n    let decreaseStep: number = currentValue - this.step;\n    let increasePage: number = currentValue + this.valueRange / 10;\n    let decreasePage: number = currentValue - this.valueRange / 10;\n\n    if (this.viewOptions.reversedControls) {\n      increaseStep = currentValue - this.step;\n      decreaseStep = currentValue + this.step;\n      increasePage = currentValue - this.valueRange / 10;\n      decreasePage = currentValue + this.valueRange / 10;\n    }\n\n    // Left to right default actions\n    const actions: {[key: string]: number} = {\n      UP: increaseStep,\n      DOWN: decreaseStep,\n      LEFT: decreaseStep,\n      RIGHT: increaseStep,\n      PAGEUP: increasePage,\n      PAGEDOWN: decreasePage,\n      HOME: this.viewOptions.reversedControls ? this.maxValue : this.minValue,\n      END: this.viewOptions.reversedControls ? this.minValue : this.maxValue,\n    };\n    // right to left means swapping right and left arrows\n    if (this.viewOptions.rightToLeft) {\n      actions.LEFT = increaseStep;\n      actions.RIGHT = decreaseStep;\n      // right to left and vertical means we also swap up and down\n      if (this.viewOptions.vertical) {\n        actions.UP = decreaseStep;\n        actions.DOWN = increaseStep;\n      }\n    }\n    return actions;\n  }\n\n  private onKeyboardEvent(event: KeyboardEvent): void {\n    const currentValue: number = this.getCurrentTrackingValue();\n    const keyCode: number = event.keyCode || event.which;\n    const keys: {[keyCode: number]: string} = {\n        38: 'UP',\n        40: 'DOWN',\n        37: 'LEFT',\n        39: 'RIGHT',\n        33: 'PAGEUP',\n        34: 'PAGEDOWN',\n        36: 'HOME',\n        35: 'END',\n      };\n    const actions: {[key: string]: number} = this.getKeyActions(currentValue);\n    const key: string = keys[keyCode];\n    const action: number = actions[key];\n\n    if (action == null || this.tracking === null) {\n      return;\n    }\n    event.preventDefault();\n\n    if (this.firstKeyDown) {\n      this.firstKeyDown = false;\n      this.userChangeStart.emit(this.getChangeContext());\n    }\n\n    const newValue: number = this.roundStep(this.sanitizeValue(action));\n    if (!this.viewOptions.draggableRangeOnly) {\n      this.positionTrackingHandle(newValue);\n    } else {\n      const difference: number = this.viewHighValue - this.viewLowValue;\n      let newMinValue: number;\n      let newMaxValue: number;\n\n      if (this.tracking === HandleType.Low) {\n        newMinValue = newValue;\n        newMaxValue = newValue + difference;\n        if (newMaxValue > this.maxValue) {\n          newMaxValue = this.maxValue;\n          newMinValue = newMaxValue - difference;\n        }\n      } else {\n        newMaxValue = newValue;\n        newMinValue = newValue - difference;\n        if (newMinValue < this.minValue) {\n          newMinValue = this.minValue;\n          newMaxValue = newMinValue + difference;\n        }\n      }\n      this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n  }\n\n  // onDragStart event handler, handles dragging of the middle bar\n  private onDragStart(pointer: SliderElement, ref: HandleType, event: MouseEvent|TouchEvent,\n    bindMove: boolean, bindEnd: boolean, simulateImmediateMove?: boolean, simulateImmediateEnd?: boolean): void {\n    const position: number = this.getEventPosition(event);\n\n    this.dragging = new Dragging();\n    this.dragging.active = true;\n    this.dragging.value = this.positionToValue(position);\n    this.dragging.difference = this.viewHighValue - this.viewLowValue;\n    this.dragging.lowLimit = this.viewOptions.rightToLeft\n        ? this.minHElem.position - position\n        : position - this.minHElem.position;\n    this.dragging.highLimit = this.viewOptions.rightToLeft\n        ? position - this.maxHElem.position\n        : this.maxHElem.position - position;\n\n    this.onStart(pointer, ref, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n  }\n\n  /** Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft */\n  private getMinValue(newPos: number, outOfBounds: boolean, isAbove: boolean): number {\n    const isRTL: boolean = this.viewOptions.rightToLeft;\n    let value: number = null;\n\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL\n          ? this.minValue\n          : this.maxValue - this.dragging.difference;\n      } else {\n        value = isRTL\n          ? this.maxValue - this.dragging.difference\n          : this.minValue;\n      }\n    } else {\n      value = isRTL\n        ? this.positionToValue(newPos + this.dragging.lowLimit)\n        : this.positionToValue(newPos - this.dragging.lowLimit);\n    }\n    return this.roundStep(value);\n  }\n\n  /** Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft */\n  private getMaxValue(newPos: number, outOfBounds: boolean, isAbove: boolean): number {\n    const isRTL: boolean = this.viewOptions.rightToLeft;\n    let value: number = null;\n\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL\n          ? this.minValue + this.dragging.difference\n          : this.maxValue;\n      } else {\n        value = isRTL\n          ? this.maxValue\n          : this.minValue + this.dragging.difference;\n      }\n    } else {\n      if (isRTL) {\n        value =\n          this.positionToValue(newPos + this.dragging.lowLimit) +\n          this.dragging.difference;\n      } else {\n        value =\n          this.positionToValue(newPos - this.dragging.lowLimit) +\n          this.dragging.difference;\n      }\n    }\n\n    return this.roundStep(value);\n  }\n\n  private onDragMove(pointer: SliderElement, event?: MouseEvent|TouchEvent): void {\n    const newPos: number = this.getEventPosition(event);\n\n    let ceilLimit: number, flrLimit: number, flrHElem: SliderElement, ceilHElem: SliderElement;\n    if (this.viewOptions.rightToLeft) {\n      ceilLimit = this.dragging.lowLimit;\n      flrLimit = this.dragging.highLimit;\n      flrHElem = this.maxHElem;\n      ceilHElem = this.minHElem;\n    } else {\n      ceilLimit = this.dragging.highLimit;\n      flrLimit = this.dragging.lowLimit;\n      flrHElem = this.minHElem;\n      ceilHElem = this.maxHElem;\n    }\n\n    const isUnderFlrLimit: boolean = newPos <= flrLimit;\n    const isOverCeilLimit: boolean = newPos >= this.maxPos - ceilLimit;\n\n    let newMinValue: number;\n    let newMaxValue: number;\n    if (isUnderFlrLimit) {\n      if (flrHElem.position === 0) {\n        return;\n      }\n      newMinValue = this.getMinValue(newPos, true, false);\n      newMaxValue = this.getMaxValue(newPos, true, false);\n    } else if (isOverCeilLimit) {\n      if (ceilHElem.position === this.maxPos) {\n        return;\n      }\n      newMaxValue = this.getMaxValue(newPos, true, true);\n      newMinValue = this.getMinValue(newPos, true, true);\n    } else {\n      newMinValue = this.getMinValue(newPos, false, false);\n      newMaxValue = this.getMaxValue(newPos, false, false);\n    }\n\n    this.positionTrackingBar(newMinValue, newMaxValue);\n  }\n\n  // Set the new value and position for the entire bar\n  private positionTrackingBar(newMinValue: number, newMaxValue: number): void {\n    if (this.viewOptions.minLimit != null &&\n        newMinValue < this.viewOptions.minLimit) {\n      newMinValue = this.viewOptions.minLimit;\n      newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.precisionLimit);\n    }\n    if (this.viewOptions.maxLimit != null &&\n        newMaxValue > this.viewOptions.maxLimit) {\n      newMaxValue = this.viewOptions.maxLimit;\n      newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.precisionLimit);\n    }\n\n    this.viewLowValue = newMinValue;\n    this.viewHighValue = newMaxValue;\n    this.applyLowValue();\n    if (this.range) {\n      this.applyHighValue();\n    }\n    this.applyModel(true);\n    this.updateHandles(HandleType.Low, this.valueToPosition(newMinValue));\n    this.updateHandles(HandleType.High, this.valueToPosition(newMaxValue));\n  }\n\n  // Set the new value and position to the current tracking handle\n  private positionTrackingHandle(newValue: number): void {\n    let valueChanged: boolean = false;\n    newValue = this.applyMinMaxLimit(newValue);\n    if (this.range) {\n      if (this.viewOptions.pushRange) {\n        newValue = this.applyPushRange(newValue);\n        valueChanged = true;\n      } else {\n        if (this.viewOptions.noSwitching) {\n          if (this.tracking === HandleType.Low && newValue > this.viewHighValue) {\n            newValue = this.applyMinMaxRange(this.viewHighValue);\n          } else if (this.tracking === HandleType.High &&\n                     newValue < this.viewLowValue) {\n            newValue = this.applyMinMaxRange(this.viewLowValue);\n          }\n        }\n        newValue = this.applyMinMaxRange(newValue);\n        /* This is to check if we need to switch the min and max handles */\n        if (this.tracking === HandleType.Low && newValue > this.viewHighValue) {\n          this.viewLowValue = this.viewHighValue;\n          this.applyLowValue();\n          this.applyModel(false);\n          this.updateHandles(HandleType.Low, this.maxHElem.position);\n          this.updateAriaAttributes();\n          this.tracking = HandleType.High;\n          this.minHElem.removeClass('ng5-slider-active');\n          this.maxHElem.addClass('ng5-slider-active');\n          if (this.viewOptions.keyboardSupport) {\n            this.focusElement(this.maxHElem);\n          }\n          valueChanged = true;\n        } else if (this.tracking === HandleType.High &&\n                   newValue < this.viewLowValue) {\n          this.viewHighValue = this.viewLowValue;\n          this.applyHighValue();\n          this.applyModel(false);\n          this.updateHandles(HandleType.High, this.minHElem.position);\n          this.updateAriaAttributes();\n          this.tracking = HandleType.Low;\n          this.maxHElem.removeClass('ng5-slider-active');\n          this.minHElem.addClass('ng5-slider-active');\n          if (this.viewOptions.keyboardSupport) {\n            this.focusElement(this.minHElem);\n          }\n          valueChanged = true;\n        }\n      }\n    }\n\n    if (this.getCurrentTrackingValue() !== newValue) {\n      if (this.tracking === HandleType.Low) {\n        this.viewLowValue = newValue;\n        this.applyLowValue();\n      } else {\n        this.viewHighValue = newValue;\n        this.applyHighValue();\n      }\n      this.applyModel(false);\n      this.updateHandles(this.tracking, this.valueToPosition(newValue));\n      this.updateAriaAttributes();\n      valueChanged = true;\n    }\n\n    if (valueChanged) {\n      this.applyModel(true);\n    }\n  }\n\n  private applyMinMaxLimit(newValue: number): number {\n    if (this.viewOptions.minLimit != null && newValue < this.viewOptions.minLimit) {\n      return this.viewOptions.minLimit;\n    }\n    if (this.viewOptions.maxLimit != null && newValue > this.viewOptions.maxLimit) {\n      return this.viewOptions.maxLimit;\n    }\n    return newValue;\n  }\n\n  private applyMinMaxRange(newValue: number): number {\n    const oppositeValue: number = this.tracking === HandleType.Low ? this.viewHighValue : this.viewLowValue;\n    const difference: number = Math.abs(newValue - oppositeValue);\n    if (this.viewOptions.minRange != null) {\n      if (difference < this.viewOptions.minRange) {\n        if (this.tracking === HandleType.Low) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.precisionLimit);\n        } else {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.precisionLimit);\n        }\n      }\n    }\n    if (this.viewOptions.maxRange != null) {\n      if (difference > this.viewOptions.maxRange) {\n        if (this.tracking === HandleType.Low) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.precisionLimit);\n        } else {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.precisionLimit);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  private applyPushRange(newValue: number): number {\n    const difference: number = this.tracking === HandleType.Low\n          ? this.viewHighValue - newValue\n          : newValue - this.viewLowValue;\n    const minRange: number =\n        this.viewOptions.minRange !== null\n          ? this.viewOptions.minRange\n          : this.viewOptions.step;\n    const maxRange: number = this.viewOptions.maxRange;\n    // if smaller than minRange\n    if (difference < minRange) {\n      if (this.tracking === HandleType.Low) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.maxValue), this.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.precisionLimit);\n        this.applyHighValue();\n        this.updateHandles(HandleType.High, this.valueToPosition(this.viewHighValue));\n      } else {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.minValue), this.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.precisionLimit);\n        this.applyLowValue();\n        this.updateHandles(HandleType.Low, this.valueToPosition(this.viewLowValue));\n      }\n      this.updateAriaAttributes();\n    } else if (maxRange !== null && difference > maxRange) {\n      // if greater than maxRange\n      if (this.tracking === HandleType.Low) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.precisionLimit);\n        this.applyHighValue();\n        this.updateHandles(HandleType.High, this.valueToPosition(this.viewHighValue)\n        );\n      } else {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.precisionLimit);\n        this.applyLowValue();\n        this.updateHandles(HandleType.Low, this.valueToPosition(this.viewLowValue));\n      }\n      this.updateAriaAttributes();\n    }\n    return newValue;\n  }\n\n  private applyModel(callUserChange: boolean): void {\n    this.valueChange.emit(this.value);\n    this.highValueChange.emit(this.highValue);\n    if (callUserChange) {\n      this.userChange.emit(this.getChangeContext());\n    }\n\n    if (this.onChangeCallback) {\n      if (this.range) {\n        this.onChangeCallback([this.value, this.highValue]);\n      } else {\n        this.onChangeCallback(this.value);\n      }\n    }\n    if (this.onTouchedCallback) {\n      if (this.range) {\n        this.onTouchedCallback([this.value, this.highValue]);\n      } else {\n        this.onTouchedCallback(this.value);\n      }\n    }\n  }\n\n  private getChangeContext(): ChangeContext {\n    const changeContext: ChangeContext = new ChangeContext();\n    changeContext.pointerType = this.tracking === HandleType.Low ? PointerType.Min : PointerType.Max;\n    changeContext.value = this.value;\n    changeContext.highValue = this.highValue;\n    return changeContext;\n  }\n}\n",
    "import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'ng5-slider-tooltip-wrapper',\n  template: `<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\"></ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ng5-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>`,\n  styles: [`.ng5-slider-inner-tooltip{height:100%}`]\n})\nexport class TooltipWrapperComponent {\n  @Input()\n  template: TemplateRef<any>;\n\n  @Input()\n  tooltip: string;\n\n  @Input()\n  placement: string;\n\n  @Input()\n  content: string;\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  SliderComponent,\n  RightOutSelDirective,\n  LeftOutSelDirective,\n  FullBarDirective,\n  SelBarDirective,\n  MinHDirective,\n  MaxHDirective,\n  FlrLabDirective,\n  CeilLabDirective,\n  MinLabDirective,\n  MaxLabDirective,\n  CmbLabDirective,\n  TicksDirective\n} from './slider.component';\nimport { TooltipWrapperComponent } from './tooltip-wrapper.component';\n\n/**\n * Ng5Slider module\n *\n * The module exports the slider component\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SliderComponent,\n    RightOutSelDirective,\n    LeftOutSelDirective,\n    FullBarDirective,\n    SelBarDirective,\n    MinHDirective,\n    MaxHDirective,\n    FlrLabDirective,\n    CeilLabDirective,\n    MinLabDirective,\n    MaxLabDirective,\n    CmbLabDirective,\n    TicksDirective,\n    TooltipWrapperComponent\n  ],\n  exports: [\n    SliderComponent\n  ]\n})\nexport class Ng5SliderModule { }\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "__values",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "call",
    "next",
    "length",
    "value",
    "done",
    "Options",
    "floor",
    "ceil",
    "step",
    "minRange",
    "maxRange",
    "pushRange",
    "minLimit",
    "maxLimit",
    "translate",
    "combineLabels",
    "getLegend",
    "stepsArray",
    "bindIndexForStepsArray",
    "draggableRange",
    "draggableRangeOnly",
    "showSelectionBar",
    "showSelectionBarEnd",
    "showSelectionBarFromValue",
    "showOuterSelectionBars",
    "hidePointerLabels",
    "hideLimitLabels",
    "autoHideLimitLabels",
    "readOnly",
    "disabled",
    "interval",
    "showTicks",
    "showTicksValues",
    "tickStep",
    "tickValueStep",
    "ticksArray",
    "ticksTooltip",
    "ticksValuesTooltip",
    "vertical",
    "getSelectionBarColor",
    "getTickColor",
    "getPointerColor",
    "keyboardSupport",
    "scale",
    "enforceStep",
    "enforceRange",
    "noSwitching",
    "onlyBindHandles",
    "rightToLeft",
    "reversedControls",
    "boundPointerLabels",
    "logScale",
    "customValueToPosition",
    "customPositionToValue",
    "precisionLimit",
    "selectionBarGradient",
    "ariaLabel",
    "ariaLabelledBy",
    "ariaLabelHigh",
    "ariaLabelledByHigh",
    "handleDimension",
    "barDimension",
    "ChangeContext",
    "ValueHelper",
    "linearValueToPosition",
    "val",
    "minVal",
    "maxVal",
    "logValueToPosition",
    "Math",
    "log",
    "linearPositionToValue",
    "percent",
    "logPositionToValue",
    "exp",
    "findStepIndex",
    "modelValue",
    "differences",
    "map",
    "abs",
    "minDifferenceIndex",
    "index",
    "JqLiteWrapper",
    "elemRef",
    "renderer",
    "eventListeners",
    "addClass",
    "clazz",
    "nativeElement",
    "removeClass",
    "hasClass",
    "classList",
    "contains",
    "html",
    "innerHTML",
    "css",
    "style",
    "setStyle",
    "removeStyle",
    "attr",
    "setAttribute",
    "removeAttribute",
    "getBoundingClientRect",
    "focus",
    "on",
    "eventName",
    "callback",
    "unsubscribe",
    "listen",
    "push",
    "onPassive",
    "_this",
    "detectPassiveEvents",
    "hasSupport",
    "addEventListener",
    "passive",
    "capture",
    "removeEventListener",
    "off",
    "_a",
    "tslib_1.__values",
    "_b",
    "_d",
    "keys",
    "_e",
    "eName",
    "ThrottledFunc",
    "func",
    "wait",
    "previous",
    "timeout",
    "now",
    "getTime",
    "remaining",
    "clearTimeout",
    "setTimeout",
    "callLater",
    "Date",
    "CompatibilityHelper",
    "isTouchEvent",
    "event",
    "TouchEvent",
    "undefined",
    "touches",
    "MathHelper",
    "roundToPrecisionLimit",
    "toPrecision",
    "clampToRange",
    "min",
    "max",
    "Tick",
    "Dragging",
    "active",
    "difference",
    "position",
    "lowLimit",
    "highLimit",
    "SliderElement",
    "_super",
    "alwaysHide",
    "tslib_1.__extends",
    "RightOutSelDirective",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "Renderer2",
    "LeftOutSelDirective",
    "FullBarDirective",
    "SelBarDirective",
    "MinHDirective",
    "MaxHDirective",
    "FlrLabDirective",
    "CeilLabDirective",
    "MinLabDirective",
    "MaxLabDirective",
    "CmbLabDirective",
    "TicksDirective",
    "NG5_SLIDER_CONTROL_VALUE_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "SliderComponent",
    "multi",
    "elementRef",
    "changeDetectionRef",
    "valueChange",
    "EventEmitter",
    "highValueChange",
    "userChangeStart",
    "userChange",
    "userChangeEnd",
    "_options",
    "viewOptions",
    "barStyle",
    "minPointerStyle",
    "maxPointerStyle",
    "ticks",
    "sliderElementVerticalClass",
    "sliderElementDisabledAttr",
    "dragging",
    "handleHalfDim",
    "maxPos",
    "tracking",
    "minValue",
    "maxValue",
    "valueRange",
    "intermediateTicks",
    "initHasRun",
    "firstKeyDown",
    "cmbLabelShown",
    "currentFocusElement",
    "onMoveUnsubscribe",
    "onEndUnsubscribe",
    "onTouchedCallback",
    "onChangeCallback",
    "defineProperty",
    "get",
    "_value",
    "set",
    "newValue",
    "_highValue",
    "newHighValue",
    "newOptions",
    "manualRefresh",
    "unsubscribeManualRefresh",
    "manualRefreshSubscription",
    "subscribe",
    "calcViewDimensions",
    "highValue",
    "ngOnInit",
    "assign",
    "options",
    "setDisabledStateAttr",
    "setVerticalClass",
    "ngAfterViewInit",
    "thrOnLowHandleChange",
    "onLowHandleChange",
    "thrOnHighHandleChange",
    "onHighHandleChange",
    "applyOptions",
    "syncLowValue",
    "range",
    "syncHighValue",
    "manageElementsStyle",
    "setMinAndMax",
    "addAccessibility",
    "updateCeilLab",
    "updateFloorLab",
    "initHandles",
    "manageEventsBindings",
    "viewLowValue",
    "viewHighValue",
    "applyModel",
    "detectChanges",
    "ngOnChanges",
    "changes",
    "onChangeOptions",
    "previousValue",
    "currentValue",
    "onChangeValue",
    "onChangeHighValue",
    "oldValue",
    "resetSlider",
    "onResize",
    "ngOnDestroy",
    "unbindEvents",
    "writeValue",
    "obj",
    "oldHighValue",
    "registerOnChange",
    "registerOnTouched",
    "setDisabledState",
    "isDisabled",
    "getCurrentTrackingValue",
    "HandleType",
    "Low",
    "getStepValue",
    "sliderValue",
    "applyLowValue",
    "applyHighValue",
    "normaliseLowValue",
    "normaliseRange",
    "PointerType",
    "Min",
    "updateLowHandle",
    "valueToPosition",
    "updateSelectionBar",
    "updateTicksScale",
    "updateAriaAttributes",
    "updateCmbLabel",
    "normaliseHighValue",
    "Max",
    "updateHighHandle",
    "normalisedValue",
    "normalisedHighValue",
    "changedPointer",
    "tempValue",
    "parseStepsArray",
    "String",
    "legend",
    "refocusPointerIfNeeded",
    "onPointerFocus",
    "pointer",
    "ref",
    "focusElement",
    "maxHElem",
    "flrLabElem",
    "ceilLabElem",
    "hideLabelsForTicks",
    "minLabElem",
    "maxLabElem",
    "cmbLabElem",
    "selBarElem",
    "leftOutSelBar",
    "rightOutSelBar",
    "fullBarElem",
    "ticksElem",
    "el",
    "hide",
    "hideEl",
    "showEl",
    "bindEvents",
    "resetLabelsValue",
    "setLabelValue",
    "label",
    "recalculateDimension",
    "noLabelInjection",
    "dimension",
    "calculateElementDimension",
    "Error",
    "roundStep",
    "sanitizeValue",
    "minHElem",
    "toString",
    "LabelType",
    "High",
    "handleWidth",
    "getTicksArray",
    "reverse",
    "translation",
    "round",
    "tick",
    "selected",
    "isTickSelected",
    "-webkit-transform",
    "-moz-transform",
    "-o-transform",
    "-ms-transform",
    "transform",
    "tooltip",
    "tooltipPlacement",
    "getDisplayValue",
    "TickValue",
    "valueTooltip",
    "valueTooltipPlacement",
    "center",
    "Floor",
    "setPosition",
    "Ceil",
    "updateHandles",
    "which",
    "newPos",
    "getHandleLabelPos",
    "labelType",
    "labelDimension",
    "HandleLabelType",
    "nearHandlePos",
    "endOfBarPos",
    "pointercolor",
    "backgroundColor",
    "shFloorCeil",
    "flHidden",
    "clHidden",
    "isMinLabAtFloor",
    "isLabelBelowFloorLab",
    "isMinLabAtCeil",
    "isLabelAboveCeilLab",
    "isMaxLabAtCeil",
    "isCmbLabAtFloor",
    "isCmbLabAtCeil",
    "hideCeil",
    "hideFloor",
    "isRTL",
    "pos",
    "dim",
    "floorPos",
    "floorDim",
    "ceilPos",
    "ceilDim",
    "isSelectionBarFromRight",
    "positionForRange",
    "centerPosition",
    "setDimension",
    "color",
    "offset",
    "reversed",
    "direction",
    "backgroundImage",
    "from",
    "to",
    "backgroundPosition",
    "backgroundSize",
    "pointerType",
    "lowTr",
    "highTr",
    "labelVal",
    "customStep",
    "steppedDifference",
    "element",
    "elem",
    "bottom",
    "top",
    "right",
    "left",
    "fn",
    "positionToValue",
    "getEventXY",
    "targetTouchId",
    "MouseEvent",
    "clientY",
    "clientX",
    "touchIndex",
    "identifier",
    "getEventPosition",
    "sliderElementBoundingRect",
    "sliderPos",
    "getNearestHandle",
    "distanceMin",
    "distanceMax",
    "onBarStart",
    "onStart",
    "bindMove",
    "bindEnd",
    "simulateImmediateMove",
    "simulateImmediateEnd",
    "onDragStart",
    "moveEvent",
    "endEvent",
    "stopPropagation",
    "preventDefault",
    "e",
    "onDragMove",
    "onMove",
    "onEnd",
    "emit",
    "getChangeContext",
    "changedTouches",
    "touchId",
    "isDragging",
    "fromTick",
    "touchForThisSlider",
    "ceilValue",
    "flrValue",
    "positionTrackingHandle",
    "onPointerBlur",
    "onKeyboardEvent",
    "onKeyUp",
    "getKeyActions",
    "increaseStep",
    "decreaseStep",
    "increasePage",
    "decreasePage",
    "actions",
    "UP",
    "DOWN",
    "LEFT",
    "RIGHT",
    "PAGEUP",
    "PAGEDOWN",
    "HOME",
    "END",
    "keyCode",
    "action",
    "38",
    "40",
    "37",
    "39",
    "33",
    "34",
    "36",
    "35",
    "newMinValue",
    "newMaxValue",
    "positionTrackingBar",
    "getMinValue",
    "outOfBounds",
    "isAbove",
    "getMaxValue",
    "ceilLimit",
    "flrLimit",
    "flrHElem",
    "ceilHElem",
    "isUnderFlrLimit",
    "isOverCeilLimit",
    "valueChanged",
    "applyMinMaxLimit",
    "applyPushRange",
    "applyMinMaxRange",
    "oppositeValue",
    "callUserChange",
    "changeContext",
    "Component",
    "template",
    "styles",
    "host",
    "class",
    "providers",
    "ChangeDetectorRef",
    "Input",
    "Output",
    "ViewChild",
    "tooltipTemplate",
    "ContentChild",
    "HostBinding",
    "HostListener",
    "TooltipWrapperComponent",
    "placement",
    "content",
    "Ng5SliderModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
